/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.eneofamiliestopersons.org.benchmarx.eneo.f2p.tgg;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.eneofamiliestopersons.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_F2P_MI {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_F2P_MI(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_F2P_MI(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_F2P_MI(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.0
	public Collection<NeoRule> getAllRulesForF2P_MI() {
		Collection<NeoRule> rules = new HashSet<>();
		
		rules.add(getRule_RegisterToRegisterRule().rule());
		rules.add(getRule_RegisterToRegisterRule_1().rule());
		rules.add(getRule_RegisterToRegisterRule_3().rule());
		rules.add(getRule_RegisterToRegisterRule_5().rule());
		rules.add(getRule_IgnoreFamilyRule().rule());
		rules.add(getRule_IgnoreFamilyRule_1().rule());
		rules.add(getRule_SonToMaleRule().rule());
		rules.add(getRule_SonToMaleRule_1().rule());
		rules.add(getRule_SonToMaleRule_2().rule());
		rules.add(getRule_SonToMaleRule_3().rule());
		rules.add(getRule_SonToMaleRule_7().rule());
		rules.add(getRule_SonToMaleRule_8().rule());
		rules.add(getRule_SonToMaleRule_9().rule());
		rules.add(getRule_SonToMaleRule_25().rule());
		rules.add(getRule_SonWithFamilyToMaleRule().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_1().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_2().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_3().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_7().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_8().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_9().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_32().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_33().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_40().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_41().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_56().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_57().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_97().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_105().rule());
		rules.add(getRule_SonWithFamilyToMaleRule_121().rule());
		rules.add(getRule_DaughterToFemaleRule().rule());
		rules.add(getRule_DaughterToFemaleRule_1().rule());
		rules.add(getRule_DaughterToFemaleRule_2().rule());
		rules.add(getRule_DaughterToFemaleRule_3().rule());
		rules.add(getRule_DaughterToFemaleRule_7().rule());
		rules.add(getRule_DaughterToFemaleRule_8().rule());
		rules.add(getRule_DaughterToFemaleRule_9().rule());
		rules.add(getRule_DaughterToFemaleRule_25().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_1().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_2().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_3().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_7().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_8().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_9().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_32().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_33().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_40().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_41().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_56().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_57().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_97().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_105().rule());
		rules.add(getRule_DaughterWithFamilyToFemaleRule_121().rule());
		rules.add(getRule_FatherToMaleRule().rule());
		rules.add(getRule_FatherToMaleRule_1().rule());
		rules.add(getRule_FatherToMaleRule_2().rule());
		rules.add(getRule_FatherToMaleRule_3().rule());
		rules.add(getRule_FatherToMaleRule_7().rule());
		rules.add(getRule_FatherToMaleRule_8().rule());
		rules.add(getRule_FatherToMaleRule_9().rule());
		rules.add(getRule_FatherToMaleRule_25().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_1().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_2().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_3().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_7().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_8().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_9().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_32().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_33().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_40().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_41().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_56().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_57().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_97().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_105().rule());
		rules.add(getRule_FatherWithFamilyToMaleRule_121().rule());
		rules.add(getRule_MotherToFemaleRule().rule());
		rules.add(getRule_MotherToFemaleRule_1().rule());
		rules.add(getRule_MotherToFemaleRule_2().rule());
		rules.add(getRule_MotherToFemaleRule_3().rule());
		rules.add(getRule_MotherToFemaleRule_7().rule());
		rules.add(getRule_MotherToFemaleRule_8().rule());
		rules.add(getRule_MotherToFemaleRule_9().rule());
		rules.add(getRule_MotherToFemaleRule_25().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_1().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_2().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_3().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_7().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_8().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_9().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_32().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_33().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_40().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_41().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_56().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_57().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_97().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_105().rule());
		rules.add(getRule_MotherWithFamilyToFemaleRule_121().rule());
		return rules;
	}
	
	public Collection<NeoConstraint> getAllConstraintsForF2P_MI() {
		Collection<NeoConstraint> constraints = new HashSet<>();
		return constraints;
	}
	
	public Collection<Rule> getAllEMSLRulesForF2P_MI(){
		var rules = new HashSet<Rule>();
		rules.add((Rule) spec.getEntities().get(1));
		rules.add((Rule) spec.getEntities().get(2));
		rules.add((Rule) spec.getEntities().get(3));
		rules.add((Rule) spec.getEntities().get(4));
		rules.add((Rule) spec.getEntities().get(5));
		rules.add((Rule) spec.getEntities().get(6));
		rules.add((Rule) spec.getEntities().get(7));
		rules.add((Rule) spec.getEntities().get(8));
		rules.add((Rule) spec.getEntities().get(9));
		rules.add((Rule) spec.getEntities().get(10));
		rules.add((Rule) spec.getEntities().get(11));
		rules.add((Rule) spec.getEntities().get(12));
		rules.add((Rule) spec.getEntities().get(13));
		rules.add((Rule) spec.getEntities().get(14));
		rules.add((Rule) spec.getEntities().get(15));
		rules.add((Rule) spec.getEntities().get(16));
		rules.add((Rule) spec.getEntities().get(17));
		rules.add((Rule) spec.getEntities().get(18));
		rules.add((Rule) spec.getEntities().get(19));
		rules.add((Rule) spec.getEntities().get(20));
		rules.add((Rule) spec.getEntities().get(21));
		rules.add((Rule) spec.getEntities().get(22));
		rules.add((Rule) spec.getEntities().get(23));
		rules.add((Rule) spec.getEntities().get(24));
		rules.add((Rule) spec.getEntities().get(25));
		rules.add((Rule) spec.getEntities().get(26));
		rules.add((Rule) spec.getEntities().get(27));
		rules.add((Rule) spec.getEntities().get(28));
		rules.add((Rule) spec.getEntities().get(29));
		rules.add((Rule) spec.getEntities().get(30));
		rules.add((Rule) spec.getEntities().get(31));
		rules.add((Rule) spec.getEntities().get(32));
		rules.add((Rule) spec.getEntities().get(33));
		rules.add((Rule) spec.getEntities().get(34));
		rules.add((Rule) spec.getEntities().get(35));
		rules.add((Rule) spec.getEntities().get(36));
		rules.add((Rule) spec.getEntities().get(37));
		rules.add((Rule) spec.getEntities().get(38));
		rules.add((Rule) spec.getEntities().get(39));
		rules.add((Rule) spec.getEntities().get(40));
		rules.add((Rule) spec.getEntities().get(41));
		rules.add((Rule) spec.getEntities().get(42));
		rules.add((Rule) spec.getEntities().get(43));
		rules.add((Rule) spec.getEntities().get(44));
		rules.add((Rule) spec.getEntities().get(45));
		rules.add((Rule) spec.getEntities().get(46));
		rules.add((Rule) spec.getEntities().get(47));
		rules.add((Rule) spec.getEntities().get(48));
		rules.add((Rule) spec.getEntities().get(49));
		rules.add((Rule) spec.getEntities().get(50));
		rules.add((Rule) spec.getEntities().get(51));
		rules.add((Rule) spec.getEntities().get(52));
		rules.add((Rule) spec.getEntities().get(53));
		rules.add((Rule) spec.getEntities().get(54));
		rules.add((Rule) spec.getEntities().get(55));
		rules.add((Rule) spec.getEntities().get(56));
		rules.add((Rule) spec.getEntities().get(57));
		rules.add((Rule) spec.getEntities().get(58));
		rules.add((Rule) spec.getEntities().get(59));
		rules.add((Rule) spec.getEntities().get(60));
		rules.add((Rule) spec.getEntities().get(61));
		rules.add((Rule) spec.getEntities().get(62));
		rules.add((Rule) spec.getEntities().get(63));
		rules.add((Rule) spec.getEntities().get(64));
		rules.add((Rule) spec.getEntities().get(65));
		rules.add((Rule) spec.getEntities().get(66));
		rules.add((Rule) spec.getEntities().get(67));
		rules.add((Rule) spec.getEntities().get(68));
		rules.add((Rule) spec.getEntities().get(69));
		rules.add((Rule) spec.getEntities().get(70));
		rules.add((Rule) spec.getEntities().get(71));
		rules.add((Rule) spec.getEntities().get(72));
		rules.add((Rule) spec.getEntities().get(73));
		rules.add((Rule) spec.getEntities().get(74));
		rules.add((Rule) spec.getEntities().get(75));
		rules.add((Rule) spec.getEntities().get(76));
		rules.add((Rule) spec.getEntities().get(77));
		rules.add((Rule) spec.getEntities().get(78));
		rules.add((Rule) spec.getEntities().get(79));
		rules.add((Rule) spec.getEntities().get(80));
		rules.add((Rule) spec.getEntities().get(81));
		rules.add((Rule) spec.getEntities().get(82));
		rules.add((Rule) spec.getEntities().get(83));
		rules.add((Rule) spec.getEntities().get(84));
		rules.add((Rule) spec.getEntities().get(85));
		rules.add((Rule) spec.getEntities().get(86));
		rules.add((Rule) spec.getEntities().get(87));
		rules.add((Rule) spec.getEntities().get(88));
		rules.add((Rule) spec.getEntities().get(89));
		rules.add((Rule) spec.getEntities().get(90));
		rules.add((Rule) spec.getEntities().get(91));
		rules.add((Rule) spec.getEntities().get(92));
		rules.add((Rule) spec.getEntities().get(93));
		rules.add((Rule) spec.getEntities().get(94));
		rules.add((Rule) spec.getEntities().get(95));
		rules.add((Rule) spec.getEntities().get(96));
		rules.add((Rule) spec.getEntities().get(97));
		rules.add((Rule) spec.getEntities().get(98));
		rules.add((Rule) spec.getEntities().get(99));
		rules.add((Rule) spec.getEntities().get(100));
		rules.add((Rule) spec.getEntities().get(101));
		rules.add((Rule) spec.getEntities().get(102));
		return rules;
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.1
	public RegisterToRegisterRuleAccess getRule_RegisterToRegisterRule() {
		return new RegisterToRegisterRuleAccess();
	}
	
	public class RegisterToRegisterRuleAccess extends NeoRuleCoAccess<RegisterToRegisterRuleData, RegisterToRegisterRuleCoData, RegisterToRegisterRuleMask> {
		public final String _fr = "fr";
		public final String _pr = "pr";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(1);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RegisterToRegisterRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRuleData(d));
		}
			
		@Override
		public Stream<RegisterToRegisterRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRuleCoData(d));
		}
		
		@Override
		public RegisterToRegisterRuleMask mask() {
			return new RegisterToRegisterRuleMask();
		}
	}
	
	public class RegisterToRegisterRuleData extends NeoData {
		public RegisterToRegisterRuleData(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRuleCoData extends NeoData {
		public RegisterToRegisterRuleCoData(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.2
	public RegisterToRegisterRule_1Access getRule_RegisterToRegisterRule_1() {
		return new RegisterToRegisterRule_1Access();
	}
	
	public class RegisterToRegisterRule_1Access extends NeoRuleCoAccess<RegisterToRegisterRule_1Data, RegisterToRegisterRule_1CoData, RegisterToRegisterRule_1Mask> {
		public final String _fr = "fr";
		public final String _pr = "pr";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(2);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RegisterToRegisterRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_1Data(d));
		}
			
		@Override
		public Stream<RegisterToRegisterRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_1CoData(d));
		}
		
		@Override
		public RegisterToRegisterRule_1Mask mask() {
			return new RegisterToRegisterRule_1Mask();
		}
	}
	
	public class RegisterToRegisterRule_1Data extends NeoData {
		public RegisterToRegisterRule_1Data(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_1CoData extends NeoData {
		public RegisterToRegisterRule_1CoData(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.3
	public RegisterToRegisterRule_3Access getRule_RegisterToRegisterRule_3() {
		return new RegisterToRegisterRule_3Access();
	}
	
	public class RegisterToRegisterRule_3Access extends NeoRuleCoAccess<RegisterToRegisterRule_3Data, RegisterToRegisterRule_3CoData, RegisterToRegisterRule_3Mask> {
		public final String _fr = "fr";
		public final String _pr = "pr";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(3);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RegisterToRegisterRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_3Data(d));
		}
			
		@Override
		public Stream<RegisterToRegisterRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_3CoData(d));
		}
		
		@Override
		public RegisterToRegisterRule_3Mask mask() {
			return new RegisterToRegisterRule_3Mask();
		}
	}
	
	public class RegisterToRegisterRule_3Data extends NeoData {
		public RegisterToRegisterRule_3Data(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_3CoData extends NeoData {
		public RegisterToRegisterRule_3CoData(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.4
	public RegisterToRegisterRule_5Access getRule_RegisterToRegisterRule_5() {
		return new RegisterToRegisterRule_5Access();
	}
	
	public class RegisterToRegisterRule_5Access extends NeoRuleCoAccess<RegisterToRegisterRule_5Data, RegisterToRegisterRule_5CoData, RegisterToRegisterRule_5Mask> {
		public final String _fr = "fr";
		public final String _pr = "pr";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(4);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<RegisterToRegisterRule_5Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_5Data(d));
		}
			
		@Override
		public Stream<RegisterToRegisterRule_5CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new RegisterToRegisterRule_5CoData(d));
		}
		
		@Override
		public RegisterToRegisterRule_5Mask mask() {
			return new RegisterToRegisterRule_5Mask();
		}
	}
	
	public class RegisterToRegisterRule_5Data extends NeoData {
		public RegisterToRegisterRule_5Data(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_5CoData extends NeoData {
		public RegisterToRegisterRule_5CoData(Record data) {
		
		}
	}
	
	public class RegisterToRegisterRule_5Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.5
	public IgnoreFamilyRuleAccess getRule_IgnoreFamilyRule() {
		return new IgnoreFamilyRuleAccess();
	}
	
	public class IgnoreFamilyRuleAccess extends NeoRuleCoAccess<IgnoreFamilyRuleData, IgnoreFamilyRuleCoData, IgnoreFamilyRuleMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(5);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<IgnoreFamilyRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreFamilyRuleData(d));
		}
			
		@Override
		public Stream<IgnoreFamilyRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreFamilyRuleCoData(d));
		}
		
		@Override
		public IgnoreFamilyRuleMask mask() {
			return new IgnoreFamilyRuleMask();
		}
	}
	
	public class IgnoreFamilyRuleData extends NeoData {
		public IgnoreFamilyRuleData(Record data) {
		
		}
	}
	
	public class IgnoreFamilyRuleCoData extends NeoData {
		public IgnoreFamilyRuleCoData(Record data) {
		
		}
	}
	
	public class IgnoreFamilyRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.6
	public IgnoreFamilyRule_1Access getRule_IgnoreFamilyRule_1() {
		return new IgnoreFamilyRule_1Access();
	}
	
	public class IgnoreFamilyRule_1Access extends NeoRuleCoAccess<IgnoreFamilyRule_1Data, IgnoreFamilyRule_1CoData, IgnoreFamilyRule_1Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		
		public final String _param____srcModelName = "__srcModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(6);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<IgnoreFamilyRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreFamilyRule_1Data(d));
		}
			
		@Override
		public Stream<IgnoreFamilyRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new IgnoreFamilyRule_1CoData(d));
		}
		
		@Override
		public IgnoreFamilyRule_1Mask mask() {
			return new IgnoreFamilyRule_1Mask();
		}
	}
	
	public class IgnoreFamilyRule_1Data extends NeoData {
		public IgnoreFamilyRule_1Data(Record data) {
		
		}
	}
	
	public class IgnoreFamilyRule_1CoData extends NeoData {
		public IgnoreFamilyRule_1CoData(Record data) {
		
		}
	}
	
	public class IgnoreFamilyRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.7
	public SonToMaleRuleAccess getRule_SonToMaleRule() {
		return new SonToMaleRuleAccess();
	}
	
	public class SonToMaleRuleAccess extends NeoRuleCoAccess<SonToMaleRuleData, SonToMaleRuleCoData, SonToMaleRuleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(7);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRuleData(d));
		}
			
		@Override
		public Stream<SonToMaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRuleCoData(d));
		}
		
		@Override
		public SonToMaleRuleMask mask() {
			return new SonToMaleRuleMask();
		}
	}
	
	public class SonToMaleRuleData extends NeoData {
		public SonToMaleRuleData(Record data) {
		
		}
	}
	
	public class SonToMaleRuleCoData extends NeoData {
		public SonToMaleRuleCoData(Record data) {
		
		}
	}
	
	public class SonToMaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.8
	public SonToMaleRule_1Access getRule_SonToMaleRule_1() {
		return new SonToMaleRule_1Access();
	}
	
	public class SonToMaleRule_1Access extends NeoRuleCoAccess<SonToMaleRule_1Data, SonToMaleRule_1CoData, SonToMaleRule_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(8);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_1Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_1CoData(d));
		}
		
		@Override
		public SonToMaleRule_1Mask mask() {
			return new SonToMaleRule_1Mask();
		}
	}
	
	public class SonToMaleRule_1Data extends NeoData {
		public SonToMaleRule_1Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_1CoData extends NeoData {
		public SonToMaleRule_1CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.9
	public SonToMaleRule_2Access getRule_SonToMaleRule_2() {
		return new SonToMaleRule_2Access();
	}
	
	public class SonToMaleRule_2Access extends NeoRuleCoAccess<SonToMaleRule_2Data, SonToMaleRule_2CoData, SonToMaleRule_2Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(9);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_2Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_2CoData(d));
		}
		
		@Override
		public SonToMaleRule_2Mask mask() {
			return new SonToMaleRule_2Mask();
		}
	}
	
	public class SonToMaleRule_2Data extends NeoData {
		public SonToMaleRule_2Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_2CoData extends NeoData {
		public SonToMaleRule_2CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.10
	public SonToMaleRule_3Access getRule_SonToMaleRule_3() {
		return new SonToMaleRule_3Access();
	}
	
	public class SonToMaleRule_3Access extends NeoRuleCoAccess<SonToMaleRule_3Data, SonToMaleRule_3CoData, SonToMaleRule_3Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(10);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_3Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_3CoData(d));
		}
		
		@Override
		public SonToMaleRule_3Mask mask() {
			return new SonToMaleRule_3Mask();
		}
	}
	
	public class SonToMaleRule_3Data extends NeoData {
		public SonToMaleRule_3Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_3CoData extends NeoData {
		public SonToMaleRule_3CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.11
	public SonToMaleRule_7Access getRule_SonToMaleRule_7() {
		return new SonToMaleRule_7Access();
	}
	
	public class SonToMaleRule_7Access extends NeoRuleCoAccess<SonToMaleRule_7Data, SonToMaleRule_7CoData, SonToMaleRule_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_7Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_7CoData(d));
		}
		
		@Override
		public SonToMaleRule_7Mask mask() {
			return new SonToMaleRule_7Mask();
		}
	}
	
	public class SonToMaleRule_7Data extends NeoData {
		public SonToMaleRule_7Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_7CoData extends NeoData {
		public SonToMaleRule_7CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.12
	public SonToMaleRule_8Access getRule_SonToMaleRule_8() {
		return new SonToMaleRule_8Access();
	}
	
	public class SonToMaleRule_8Access extends NeoRuleCoAccess<SonToMaleRule_8Data, SonToMaleRule_8CoData, SonToMaleRule_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_8Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_8CoData(d));
		}
		
		@Override
		public SonToMaleRule_8Mask mask() {
			return new SonToMaleRule_8Mask();
		}
	}
	
	public class SonToMaleRule_8Data extends NeoData {
		public SonToMaleRule_8Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_8CoData extends NeoData {
		public SonToMaleRule_8CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.13
	public SonToMaleRule_9Access getRule_SonToMaleRule_9() {
		return new SonToMaleRule_9Access();
	}
	
	public class SonToMaleRule_9Access extends NeoRuleCoAccess<SonToMaleRule_9Data, SonToMaleRule_9CoData, SonToMaleRule_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_9Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_9CoData(d));
		}
		
		@Override
		public SonToMaleRule_9Mask mask() {
			return new SonToMaleRule_9Mask();
		}
	}
	
	public class SonToMaleRule_9Data extends NeoData {
		public SonToMaleRule_9Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_9CoData extends NeoData {
		public SonToMaleRule_9CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.14
	public SonToMaleRule_25Access getRule_SonToMaleRule_25() {
		return new SonToMaleRule_25Access();
	}
	
	public class SonToMaleRule_25Access extends NeoRuleCoAccess<SonToMaleRule_25Data, SonToMaleRule_25CoData, SonToMaleRule_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonToMaleRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_25Data(d));
		}
			
		@Override
		public Stream<SonToMaleRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonToMaleRule_25CoData(d));
		}
		
		@Override
		public SonToMaleRule_25Mask mask() {
			return new SonToMaleRule_25Mask();
		}
	}
	
	public class SonToMaleRule_25Data extends NeoData {
		public SonToMaleRule_25Data(Record data) {
		
		}
	}
	
	public class SonToMaleRule_25CoData extends NeoData {
		public SonToMaleRule_25CoData(Record data) {
		
		}
	}
	
	public class SonToMaleRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.15
	public SonWithFamilyToMaleRuleAccess getRule_SonWithFamilyToMaleRule() {
		return new SonWithFamilyToMaleRuleAccess();
	}
	
	public class SonWithFamilyToMaleRuleAccess extends NeoRuleCoAccess<SonWithFamilyToMaleRuleData, SonWithFamilyToMaleRuleCoData, SonWithFamilyToMaleRuleMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRuleData(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRuleCoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRuleMask mask() {
			return new SonWithFamilyToMaleRuleMask();
		}
	}
	
	public class SonWithFamilyToMaleRuleData extends NeoData {
		public SonWithFamilyToMaleRuleData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRuleCoData extends NeoData {
		public SonWithFamilyToMaleRuleCoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.16
	public SonWithFamilyToMaleRule_1Access getRule_SonWithFamilyToMaleRule_1() {
		return new SonWithFamilyToMaleRule_1Access();
	}
	
	public class SonWithFamilyToMaleRule_1Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_1Data, SonWithFamilyToMaleRule_1CoData, SonWithFamilyToMaleRule_1Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_1Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_1CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_1Mask mask() {
			return new SonWithFamilyToMaleRule_1Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_1Data extends NeoData {
		public SonWithFamilyToMaleRule_1Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_1CoData extends NeoData {
		public SonWithFamilyToMaleRule_1CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.17
	public SonWithFamilyToMaleRule_2Access getRule_SonWithFamilyToMaleRule_2() {
		return new SonWithFamilyToMaleRule_2Access();
	}
	
	public class SonWithFamilyToMaleRule_2Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_2Data, SonWithFamilyToMaleRule_2CoData, SonWithFamilyToMaleRule_2Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_2Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_2CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_2Mask mask() {
			return new SonWithFamilyToMaleRule_2Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_2Data extends NeoData {
		public SonWithFamilyToMaleRule_2Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_2CoData extends NeoData {
		public SonWithFamilyToMaleRule_2CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.18
	public SonWithFamilyToMaleRule_3Access getRule_SonWithFamilyToMaleRule_3() {
		return new SonWithFamilyToMaleRule_3Access();
	}
	
	public class SonWithFamilyToMaleRule_3Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_3Data, SonWithFamilyToMaleRule_3CoData, SonWithFamilyToMaleRule_3Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(18);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_3Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_3CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_3Mask mask() {
			return new SonWithFamilyToMaleRule_3Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_3Data extends NeoData {
		public SonWithFamilyToMaleRule_3Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_3CoData extends NeoData {
		public SonWithFamilyToMaleRule_3CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.19
	public SonWithFamilyToMaleRule_7Access getRule_SonWithFamilyToMaleRule_7() {
		return new SonWithFamilyToMaleRule_7Access();
	}
	
	public class SonWithFamilyToMaleRule_7Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_7Data, SonWithFamilyToMaleRule_7CoData, SonWithFamilyToMaleRule_7Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(19);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_7Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_7CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_7Mask mask() {
			return new SonWithFamilyToMaleRule_7Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_7Data extends NeoData {
		public SonWithFamilyToMaleRule_7Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_7CoData extends NeoData {
		public SonWithFamilyToMaleRule_7CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.20
	public SonWithFamilyToMaleRule_8Access getRule_SonWithFamilyToMaleRule_8() {
		return new SonWithFamilyToMaleRule_8Access();
	}
	
	public class SonWithFamilyToMaleRule_8Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_8Data, SonWithFamilyToMaleRule_8CoData, SonWithFamilyToMaleRule_8Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_8Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_8CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_8Mask mask() {
			return new SonWithFamilyToMaleRule_8Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_8Data extends NeoData {
		public SonWithFamilyToMaleRule_8Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_8CoData extends NeoData {
		public SonWithFamilyToMaleRule_8CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.21
	public SonWithFamilyToMaleRule_9Access getRule_SonWithFamilyToMaleRule_9() {
		return new SonWithFamilyToMaleRule_9Access();
	}
	
	public class SonWithFamilyToMaleRule_9Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_9Data, SonWithFamilyToMaleRule_9CoData, SonWithFamilyToMaleRule_9Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_9Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_9CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_9Mask mask() {
			return new SonWithFamilyToMaleRule_9Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_9Data extends NeoData {
		public SonWithFamilyToMaleRule_9Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_9CoData extends NeoData {
		public SonWithFamilyToMaleRule_9CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.22
	public SonWithFamilyToMaleRule_32Access getRule_SonWithFamilyToMaleRule_32() {
		return new SonWithFamilyToMaleRule_32Access();
	}
	
	public class SonWithFamilyToMaleRule_32Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_32Data, SonWithFamilyToMaleRule_32CoData, SonWithFamilyToMaleRule_32Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_32Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_32Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_32CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_32CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_32Mask mask() {
			return new SonWithFamilyToMaleRule_32Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_32Data extends NeoData {
		public SonWithFamilyToMaleRule_32Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_32CoData extends NeoData {
		public SonWithFamilyToMaleRule_32CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_32Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.23
	public SonWithFamilyToMaleRule_33Access getRule_SonWithFamilyToMaleRule_33() {
		return new SonWithFamilyToMaleRule_33Access();
	}
	
	public class SonWithFamilyToMaleRule_33Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_33Data, SonWithFamilyToMaleRule_33CoData, SonWithFamilyToMaleRule_33Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_33Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_33Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_33CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_33CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_33Mask mask() {
			return new SonWithFamilyToMaleRule_33Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_33Data extends NeoData {
		public SonWithFamilyToMaleRule_33Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_33CoData extends NeoData {
		public SonWithFamilyToMaleRule_33CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_33Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.24
	public SonWithFamilyToMaleRule_40Access getRule_SonWithFamilyToMaleRule_40() {
		return new SonWithFamilyToMaleRule_40Access();
	}
	
	public class SonWithFamilyToMaleRule_40Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_40Data, SonWithFamilyToMaleRule_40CoData, SonWithFamilyToMaleRule_40Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_40Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_40Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_40CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_40CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_40Mask mask() {
			return new SonWithFamilyToMaleRule_40Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_40Data extends NeoData {
		public SonWithFamilyToMaleRule_40Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_40CoData extends NeoData {
		public SonWithFamilyToMaleRule_40CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_40Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.25
	public SonWithFamilyToMaleRule_41Access getRule_SonWithFamilyToMaleRule_41() {
		return new SonWithFamilyToMaleRule_41Access();
	}
	
	public class SonWithFamilyToMaleRule_41Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_41Data, SonWithFamilyToMaleRule_41CoData, SonWithFamilyToMaleRule_41Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_41Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_41Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_41CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_41CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_41Mask mask() {
			return new SonWithFamilyToMaleRule_41Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_41Data extends NeoData {
		public SonWithFamilyToMaleRule_41Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_41CoData extends NeoData {
		public SonWithFamilyToMaleRule_41CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_41Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.26
	public SonWithFamilyToMaleRule_56Access getRule_SonWithFamilyToMaleRule_56() {
		return new SonWithFamilyToMaleRule_56Access();
	}
	
	public class SonWithFamilyToMaleRule_56Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_56Data, SonWithFamilyToMaleRule_56CoData, SonWithFamilyToMaleRule_56Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_56Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_56Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_56CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_56CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_56Mask mask() {
			return new SonWithFamilyToMaleRule_56Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_56Data extends NeoData {
		public SonWithFamilyToMaleRule_56Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_56CoData extends NeoData {
		public SonWithFamilyToMaleRule_56CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_56Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.27
	public SonWithFamilyToMaleRule_57Access getRule_SonWithFamilyToMaleRule_57() {
		return new SonWithFamilyToMaleRule_57Access();
	}
	
	public class SonWithFamilyToMaleRule_57Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_57Data, SonWithFamilyToMaleRule_57CoData, SonWithFamilyToMaleRule_57Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_57Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_57Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_57CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_57CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_57Mask mask() {
			return new SonWithFamilyToMaleRule_57Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_57Data extends NeoData {
		public SonWithFamilyToMaleRule_57Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_57CoData extends NeoData {
		public SonWithFamilyToMaleRule_57CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_57Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.28
	public SonWithFamilyToMaleRule_97Access getRule_SonWithFamilyToMaleRule_97() {
		return new SonWithFamilyToMaleRule_97Access();
	}
	
	public class SonWithFamilyToMaleRule_97Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_97Data, SonWithFamilyToMaleRule_97CoData, SonWithFamilyToMaleRule_97Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_97Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_97CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_97Mask mask() {
			return new SonWithFamilyToMaleRule_97Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_97Data extends NeoData {
		public SonWithFamilyToMaleRule_97Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_97CoData extends NeoData {
		public SonWithFamilyToMaleRule_97CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.29
	public SonWithFamilyToMaleRule_105Access getRule_SonWithFamilyToMaleRule_105() {
		return new SonWithFamilyToMaleRule_105Access();
	}
	
	public class SonWithFamilyToMaleRule_105Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_105Data, SonWithFamilyToMaleRule_105CoData, SonWithFamilyToMaleRule_105Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_105Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_105Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_105CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_105CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_105Mask mask() {
			return new SonWithFamilyToMaleRule_105Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_105Data extends NeoData {
		public SonWithFamilyToMaleRule_105Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_105CoData extends NeoData {
		public SonWithFamilyToMaleRule_105CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_105Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.30
	public SonWithFamilyToMaleRule_121Access getRule_SonWithFamilyToMaleRule_121() {
		return new SonWithFamilyToMaleRule_121Access();
	}
	
	public class SonWithFamilyToMaleRule_121Access extends NeoRuleCoAccess<SonWithFamilyToMaleRule_121Data, SonWithFamilyToMaleRule_121CoData, SonWithFamilyToMaleRule_121Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(30);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SonWithFamilyToMaleRule_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_121Data(d));
		}
			
		@Override
		public Stream<SonWithFamilyToMaleRule_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonWithFamilyToMaleRule_121CoData(d));
		}
		
		@Override
		public SonWithFamilyToMaleRule_121Mask mask() {
			return new SonWithFamilyToMaleRule_121Mask();
		}
	}
	
	public class SonWithFamilyToMaleRule_121Data extends NeoData {
		public SonWithFamilyToMaleRule_121Data(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_121CoData extends NeoData {
		public SonWithFamilyToMaleRule_121CoData(Record data) {
		
		}
	}
	
	public class SonWithFamilyToMaleRule_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.31
	public DaughterToFemaleRuleAccess getRule_DaughterToFemaleRule() {
		return new DaughterToFemaleRuleAccess();
	}
	
	public class DaughterToFemaleRuleAccess extends NeoRuleCoAccess<DaughterToFemaleRuleData, DaughterToFemaleRuleCoData, DaughterToFemaleRuleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(31);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRuleData(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRuleCoData(d));
		}
		
		@Override
		public DaughterToFemaleRuleMask mask() {
			return new DaughterToFemaleRuleMask();
		}
	}
	
	public class DaughterToFemaleRuleData extends NeoData {
		public DaughterToFemaleRuleData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRuleCoData extends NeoData {
		public DaughterToFemaleRuleCoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.32
	public DaughterToFemaleRule_1Access getRule_DaughterToFemaleRule_1() {
		return new DaughterToFemaleRule_1Access();
	}
	
	public class DaughterToFemaleRule_1Access extends NeoRuleCoAccess<DaughterToFemaleRule_1Data, DaughterToFemaleRule_1CoData, DaughterToFemaleRule_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(32);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_1Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_1CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_1Mask mask() {
			return new DaughterToFemaleRule_1Mask();
		}
	}
	
	public class DaughterToFemaleRule_1Data extends NeoData {
		public DaughterToFemaleRule_1Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_1CoData extends NeoData {
		public DaughterToFemaleRule_1CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.33
	public DaughterToFemaleRule_2Access getRule_DaughterToFemaleRule_2() {
		return new DaughterToFemaleRule_2Access();
	}
	
	public class DaughterToFemaleRule_2Access extends NeoRuleCoAccess<DaughterToFemaleRule_2Data, DaughterToFemaleRule_2CoData, DaughterToFemaleRule_2Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(33);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_2Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_2CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_2Mask mask() {
			return new DaughterToFemaleRule_2Mask();
		}
	}
	
	public class DaughterToFemaleRule_2Data extends NeoData {
		public DaughterToFemaleRule_2Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_2CoData extends NeoData {
		public DaughterToFemaleRule_2CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.34
	public DaughterToFemaleRule_3Access getRule_DaughterToFemaleRule_3() {
		return new DaughterToFemaleRule_3Access();
	}
	
	public class DaughterToFemaleRule_3Access extends NeoRuleCoAccess<DaughterToFemaleRule_3Data, DaughterToFemaleRule_3CoData, DaughterToFemaleRule_3Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(34);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_3Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_3CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_3Mask mask() {
			return new DaughterToFemaleRule_3Mask();
		}
	}
	
	public class DaughterToFemaleRule_3Data extends NeoData {
		public DaughterToFemaleRule_3Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_3CoData extends NeoData {
		public DaughterToFemaleRule_3CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.35
	public DaughterToFemaleRule_7Access getRule_DaughterToFemaleRule_7() {
		return new DaughterToFemaleRule_7Access();
	}
	
	public class DaughterToFemaleRule_7Access extends NeoRuleCoAccess<DaughterToFemaleRule_7Data, DaughterToFemaleRule_7CoData, DaughterToFemaleRule_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(35);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_7Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_7CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_7Mask mask() {
			return new DaughterToFemaleRule_7Mask();
		}
	}
	
	public class DaughterToFemaleRule_7Data extends NeoData {
		public DaughterToFemaleRule_7Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_7CoData extends NeoData {
		public DaughterToFemaleRule_7CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.36
	public DaughterToFemaleRule_8Access getRule_DaughterToFemaleRule_8() {
		return new DaughterToFemaleRule_8Access();
	}
	
	public class DaughterToFemaleRule_8Access extends NeoRuleCoAccess<DaughterToFemaleRule_8Data, DaughterToFemaleRule_8CoData, DaughterToFemaleRule_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(36);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_8Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_8CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_8Mask mask() {
			return new DaughterToFemaleRule_8Mask();
		}
	}
	
	public class DaughterToFemaleRule_8Data extends NeoData {
		public DaughterToFemaleRule_8Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_8CoData extends NeoData {
		public DaughterToFemaleRule_8CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.37
	public DaughterToFemaleRule_9Access getRule_DaughterToFemaleRule_9() {
		return new DaughterToFemaleRule_9Access();
	}
	
	public class DaughterToFemaleRule_9Access extends NeoRuleCoAccess<DaughterToFemaleRule_9Data, DaughterToFemaleRule_9CoData, DaughterToFemaleRule_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(37);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_9Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_9CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_9Mask mask() {
			return new DaughterToFemaleRule_9Mask();
		}
	}
	
	public class DaughterToFemaleRule_9Data extends NeoData {
		public DaughterToFemaleRule_9Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_9CoData extends NeoData {
		public DaughterToFemaleRule_9CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.38
	public DaughterToFemaleRule_25Access getRule_DaughterToFemaleRule_25() {
		return new DaughterToFemaleRule_25Access();
	}
	
	public class DaughterToFemaleRule_25Access extends NeoRuleCoAccess<DaughterToFemaleRule_25Data, DaughterToFemaleRule_25CoData, DaughterToFemaleRule_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(38);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterToFemaleRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_25Data(d));
		}
			
		@Override
		public Stream<DaughterToFemaleRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterToFemaleRule_25CoData(d));
		}
		
		@Override
		public DaughterToFemaleRule_25Mask mask() {
			return new DaughterToFemaleRule_25Mask();
		}
	}
	
	public class DaughterToFemaleRule_25Data extends NeoData {
		public DaughterToFemaleRule_25Data(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_25CoData extends NeoData {
		public DaughterToFemaleRule_25CoData(Record data) {
		
		}
	}
	
	public class DaughterToFemaleRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.39
	public DaughterWithFamilyToFemaleRuleAccess getRule_DaughterWithFamilyToFemaleRule() {
		return new DaughterWithFamilyToFemaleRuleAccess();
	}
	
	public class DaughterWithFamilyToFemaleRuleAccess extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRuleData, DaughterWithFamilyToFemaleRuleCoData, DaughterWithFamilyToFemaleRuleMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(39);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRuleData(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRuleCoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRuleMask mask() {
			return new DaughterWithFamilyToFemaleRuleMask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRuleData extends NeoData {
		public DaughterWithFamilyToFemaleRuleData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRuleCoData extends NeoData {
		public DaughterWithFamilyToFemaleRuleCoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.40
	public DaughterWithFamilyToFemaleRule_1Access getRule_DaughterWithFamilyToFemaleRule_1() {
		return new DaughterWithFamilyToFemaleRule_1Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_1Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_1Data, DaughterWithFamilyToFemaleRule_1CoData, DaughterWithFamilyToFemaleRule_1Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(40);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_1Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_1CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_1Mask mask() {
			return new DaughterWithFamilyToFemaleRule_1Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_1Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_1Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_1CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_1CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.41
	public DaughterWithFamilyToFemaleRule_2Access getRule_DaughterWithFamilyToFemaleRule_2() {
		return new DaughterWithFamilyToFemaleRule_2Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_2Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_2Data, DaughterWithFamilyToFemaleRule_2CoData, DaughterWithFamilyToFemaleRule_2Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(41);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_2Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_2CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_2Mask mask() {
			return new DaughterWithFamilyToFemaleRule_2Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_2Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_2Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_2CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_2CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.42
	public DaughterWithFamilyToFemaleRule_3Access getRule_DaughterWithFamilyToFemaleRule_3() {
		return new DaughterWithFamilyToFemaleRule_3Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_3Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_3Data, DaughterWithFamilyToFemaleRule_3CoData, DaughterWithFamilyToFemaleRule_3Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(42);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_3Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_3CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_3Mask mask() {
			return new DaughterWithFamilyToFemaleRule_3Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_3Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_3Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_3CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_3CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.43
	public DaughterWithFamilyToFemaleRule_7Access getRule_DaughterWithFamilyToFemaleRule_7() {
		return new DaughterWithFamilyToFemaleRule_7Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_7Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_7Data, DaughterWithFamilyToFemaleRule_7CoData, DaughterWithFamilyToFemaleRule_7Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(43);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_7Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_7CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_7Mask mask() {
			return new DaughterWithFamilyToFemaleRule_7Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_7Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_7Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_7CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_7CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.44
	public DaughterWithFamilyToFemaleRule_8Access getRule_DaughterWithFamilyToFemaleRule_8() {
		return new DaughterWithFamilyToFemaleRule_8Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_8Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_8Data, DaughterWithFamilyToFemaleRule_8CoData, DaughterWithFamilyToFemaleRule_8Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(44);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_8Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_8CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_8Mask mask() {
			return new DaughterWithFamilyToFemaleRule_8Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_8Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_8Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_8CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_8CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.45
	public DaughterWithFamilyToFemaleRule_9Access getRule_DaughterWithFamilyToFemaleRule_9() {
		return new DaughterWithFamilyToFemaleRule_9Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_9Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_9Data, DaughterWithFamilyToFemaleRule_9CoData, DaughterWithFamilyToFemaleRule_9Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(45);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_9Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_9CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_9Mask mask() {
			return new DaughterWithFamilyToFemaleRule_9Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_9Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_9Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_9CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_9CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.46
	public DaughterWithFamilyToFemaleRule_32Access getRule_DaughterWithFamilyToFemaleRule_32() {
		return new DaughterWithFamilyToFemaleRule_32Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_32Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_32Data, DaughterWithFamilyToFemaleRule_32CoData, DaughterWithFamilyToFemaleRule_32Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(46);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_32Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_32Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_32CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_32CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_32Mask mask() {
			return new DaughterWithFamilyToFemaleRule_32Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_32Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_32Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_32CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_32CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_32Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.47
	public DaughterWithFamilyToFemaleRule_33Access getRule_DaughterWithFamilyToFemaleRule_33() {
		return new DaughterWithFamilyToFemaleRule_33Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_33Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_33Data, DaughterWithFamilyToFemaleRule_33CoData, DaughterWithFamilyToFemaleRule_33Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(47);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_33Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_33Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_33CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_33CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_33Mask mask() {
			return new DaughterWithFamilyToFemaleRule_33Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_33Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_33Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_33CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_33CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_33Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.48
	public DaughterWithFamilyToFemaleRule_40Access getRule_DaughterWithFamilyToFemaleRule_40() {
		return new DaughterWithFamilyToFemaleRule_40Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_40Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_40Data, DaughterWithFamilyToFemaleRule_40CoData, DaughterWithFamilyToFemaleRule_40Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(48);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_40Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_40Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_40CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_40CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_40Mask mask() {
			return new DaughterWithFamilyToFemaleRule_40Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_40Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_40Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_40CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_40CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_40Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.49
	public DaughterWithFamilyToFemaleRule_41Access getRule_DaughterWithFamilyToFemaleRule_41() {
		return new DaughterWithFamilyToFemaleRule_41Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_41Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_41Data, DaughterWithFamilyToFemaleRule_41CoData, DaughterWithFamilyToFemaleRule_41Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(49);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_41Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_41Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_41CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_41CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_41Mask mask() {
			return new DaughterWithFamilyToFemaleRule_41Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_41Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_41Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_41CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_41CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_41Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.50
	public DaughterWithFamilyToFemaleRule_56Access getRule_DaughterWithFamilyToFemaleRule_56() {
		return new DaughterWithFamilyToFemaleRule_56Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_56Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_56Data, DaughterWithFamilyToFemaleRule_56CoData, DaughterWithFamilyToFemaleRule_56Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(50);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_56Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_56Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_56CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_56CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_56Mask mask() {
			return new DaughterWithFamilyToFemaleRule_56Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_56Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_56Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_56CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_56CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_56Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.51
	public DaughterWithFamilyToFemaleRule_57Access getRule_DaughterWithFamilyToFemaleRule_57() {
		return new DaughterWithFamilyToFemaleRule_57Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_57Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_57Data, DaughterWithFamilyToFemaleRule_57CoData, DaughterWithFamilyToFemaleRule_57Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(51);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_57Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_57Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_57CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_57CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_57Mask mask() {
			return new DaughterWithFamilyToFemaleRule_57Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_57Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_57Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_57CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_57CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_57Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.52
	public DaughterWithFamilyToFemaleRule_97Access getRule_DaughterWithFamilyToFemaleRule_97() {
		return new DaughterWithFamilyToFemaleRule_97Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_97Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_97Data, DaughterWithFamilyToFemaleRule_97CoData, DaughterWithFamilyToFemaleRule_97Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(52);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_97Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_97CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_97Mask mask() {
			return new DaughterWithFamilyToFemaleRule_97Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_97Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_97Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_97CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_97CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.53
	public DaughterWithFamilyToFemaleRule_105Access getRule_DaughterWithFamilyToFemaleRule_105() {
		return new DaughterWithFamilyToFemaleRule_105Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_105Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_105Data, DaughterWithFamilyToFemaleRule_105CoData, DaughterWithFamilyToFemaleRule_105Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(53);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_105Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_105Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_105CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_105CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_105Mask mask() {
			return new DaughterWithFamilyToFemaleRule_105Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_105Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_105Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_105CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_105CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_105Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.54
	public DaughterWithFamilyToFemaleRule_121Access getRule_DaughterWithFamilyToFemaleRule_121() {
		return new DaughterWithFamilyToFemaleRule_121Access();
	}
	
	public class DaughterWithFamilyToFemaleRule_121Access extends NeoRuleCoAccess<DaughterWithFamilyToFemaleRule_121Data, DaughterWithFamilyToFemaleRule_121CoData, DaughterWithFamilyToFemaleRule_121Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(54);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_121Data(d));
		}
			
		@Override
		public Stream<DaughterWithFamilyToFemaleRule_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterWithFamilyToFemaleRule_121CoData(d));
		}
		
		@Override
		public DaughterWithFamilyToFemaleRule_121Mask mask() {
			return new DaughterWithFamilyToFemaleRule_121Mask();
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_121Data extends NeoData {
		public DaughterWithFamilyToFemaleRule_121Data(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_121CoData extends NeoData {
		public DaughterWithFamilyToFemaleRule_121CoData(Record data) {
		
		}
	}
	
	public class DaughterWithFamilyToFemaleRule_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.55
	public FatherToMaleRuleAccess getRule_FatherToMaleRule() {
		return new FatherToMaleRuleAccess();
	}
	
	public class FatherToMaleRuleAccess extends NeoRuleCoAccess<FatherToMaleRuleData, FatherToMaleRuleCoData, FatherToMaleRuleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(55);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRuleData(d));
		}
			
		@Override
		public Stream<FatherToMaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRuleCoData(d));
		}
		
		@Override
		public FatherToMaleRuleMask mask() {
			return new FatherToMaleRuleMask();
		}
	}
	
	public class FatherToMaleRuleData extends NeoData {
		public FatherToMaleRuleData(Record data) {
		
		}
	}
	
	public class FatherToMaleRuleCoData extends NeoData {
		public FatherToMaleRuleCoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.56
	public FatherToMaleRule_1Access getRule_FatherToMaleRule_1() {
		return new FatherToMaleRule_1Access();
	}
	
	public class FatherToMaleRule_1Access extends NeoRuleCoAccess<FatherToMaleRule_1Data, FatherToMaleRule_1CoData, FatherToMaleRule_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(56);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_1Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_1CoData(d));
		}
		
		@Override
		public FatherToMaleRule_1Mask mask() {
			return new FatherToMaleRule_1Mask();
		}
	}
	
	public class FatherToMaleRule_1Data extends NeoData {
		public FatherToMaleRule_1Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_1CoData extends NeoData {
		public FatherToMaleRule_1CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.57
	public FatherToMaleRule_2Access getRule_FatherToMaleRule_2() {
		return new FatherToMaleRule_2Access();
	}
	
	public class FatherToMaleRule_2Access extends NeoRuleCoAccess<FatherToMaleRule_2Data, FatherToMaleRule_2CoData, FatherToMaleRule_2Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(57);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_2Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_2CoData(d));
		}
		
		@Override
		public FatherToMaleRule_2Mask mask() {
			return new FatherToMaleRule_2Mask();
		}
	}
	
	public class FatherToMaleRule_2Data extends NeoData {
		public FatherToMaleRule_2Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_2CoData extends NeoData {
		public FatherToMaleRule_2CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.58
	public FatherToMaleRule_3Access getRule_FatherToMaleRule_3() {
		return new FatherToMaleRule_3Access();
	}
	
	public class FatherToMaleRule_3Access extends NeoRuleCoAccess<FatherToMaleRule_3Data, FatherToMaleRule_3CoData, FatherToMaleRule_3Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(58);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_3Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_3CoData(d));
		}
		
		@Override
		public FatherToMaleRule_3Mask mask() {
			return new FatherToMaleRule_3Mask();
		}
	}
	
	public class FatherToMaleRule_3Data extends NeoData {
		public FatherToMaleRule_3Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_3CoData extends NeoData {
		public FatherToMaleRule_3CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.59
	public FatherToMaleRule_7Access getRule_FatherToMaleRule_7() {
		return new FatherToMaleRule_7Access();
	}
	
	public class FatherToMaleRule_7Access extends NeoRuleCoAccess<FatherToMaleRule_7Data, FatherToMaleRule_7CoData, FatherToMaleRule_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(59);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_7Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_7CoData(d));
		}
		
		@Override
		public FatherToMaleRule_7Mask mask() {
			return new FatherToMaleRule_7Mask();
		}
	}
	
	public class FatherToMaleRule_7Data extends NeoData {
		public FatherToMaleRule_7Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_7CoData extends NeoData {
		public FatherToMaleRule_7CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.60
	public FatherToMaleRule_8Access getRule_FatherToMaleRule_8() {
		return new FatherToMaleRule_8Access();
	}
	
	public class FatherToMaleRule_8Access extends NeoRuleCoAccess<FatherToMaleRule_8Data, FatherToMaleRule_8CoData, FatherToMaleRule_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(60);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_8Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_8CoData(d));
		}
		
		@Override
		public FatherToMaleRule_8Mask mask() {
			return new FatherToMaleRule_8Mask();
		}
	}
	
	public class FatherToMaleRule_8Data extends NeoData {
		public FatherToMaleRule_8Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_8CoData extends NeoData {
		public FatherToMaleRule_8CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.61
	public FatherToMaleRule_9Access getRule_FatherToMaleRule_9() {
		return new FatherToMaleRule_9Access();
	}
	
	public class FatherToMaleRule_9Access extends NeoRuleCoAccess<FatherToMaleRule_9Data, FatherToMaleRule_9CoData, FatherToMaleRule_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(61);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_9Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_9CoData(d));
		}
		
		@Override
		public FatherToMaleRule_9Mask mask() {
			return new FatherToMaleRule_9Mask();
		}
	}
	
	public class FatherToMaleRule_9Data extends NeoData {
		public FatherToMaleRule_9Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_9CoData extends NeoData {
		public FatherToMaleRule_9CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.62
	public FatherToMaleRule_25Access getRule_FatherToMaleRule_25() {
		return new FatherToMaleRule_25Access();
	}
	
	public class FatherToMaleRule_25Access extends NeoRuleCoAccess<FatherToMaleRule_25Data, FatherToMaleRule_25CoData, FatherToMaleRule_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(62);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherToMaleRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_25Data(d));
		}
			
		@Override
		public Stream<FatherToMaleRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherToMaleRule_25CoData(d));
		}
		
		@Override
		public FatherToMaleRule_25Mask mask() {
			return new FatherToMaleRule_25Mask();
		}
	}
	
	public class FatherToMaleRule_25Data extends NeoData {
		public FatherToMaleRule_25Data(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_25CoData extends NeoData {
		public FatherToMaleRule_25CoData(Record data) {
		
		}
	}
	
	public class FatherToMaleRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.63
	public FatherWithFamilyToMaleRuleAccess getRule_FatherWithFamilyToMaleRule() {
		return new FatherWithFamilyToMaleRuleAccess();
	}
	
	public class FatherWithFamilyToMaleRuleAccess extends NeoRuleCoAccess<FatherWithFamilyToMaleRuleData, FatherWithFamilyToMaleRuleCoData, FatherWithFamilyToMaleRuleMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(63);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRuleData(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRuleCoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRuleMask mask() {
			return new FatherWithFamilyToMaleRuleMask();
		}
	}
	
	public class FatherWithFamilyToMaleRuleData extends NeoData {
		public FatherWithFamilyToMaleRuleData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRuleCoData extends NeoData {
		public FatherWithFamilyToMaleRuleCoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.64
	public FatherWithFamilyToMaleRule_1Access getRule_FatherWithFamilyToMaleRule_1() {
		return new FatherWithFamilyToMaleRule_1Access();
	}
	
	public class FatherWithFamilyToMaleRule_1Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_1Data, FatherWithFamilyToMaleRule_1CoData, FatherWithFamilyToMaleRule_1Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(64);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_1Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_1CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_1Mask mask() {
			return new FatherWithFamilyToMaleRule_1Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_1Data extends NeoData {
		public FatherWithFamilyToMaleRule_1Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_1CoData extends NeoData {
		public FatherWithFamilyToMaleRule_1CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.65
	public FatherWithFamilyToMaleRule_2Access getRule_FatherWithFamilyToMaleRule_2() {
		return new FatherWithFamilyToMaleRule_2Access();
	}
	
	public class FatherWithFamilyToMaleRule_2Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_2Data, FatherWithFamilyToMaleRule_2CoData, FatherWithFamilyToMaleRule_2Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(65);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_2Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_2CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_2Mask mask() {
			return new FatherWithFamilyToMaleRule_2Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_2Data extends NeoData {
		public FatherWithFamilyToMaleRule_2Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_2CoData extends NeoData {
		public FatherWithFamilyToMaleRule_2CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.66
	public FatherWithFamilyToMaleRule_3Access getRule_FatherWithFamilyToMaleRule_3() {
		return new FatherWithFamilyToMaleRule_3Access();
	}
	
	public class FatherWithFamilyToMaleRule_3Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_3Data, FatherWithFamilyToMaleRule_3CoData, FatherWithFamilyToMaleRule_3Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(66);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_3Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_3CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_3Mask mask() {
			return new FatherWithFamilyToMaleRule_3Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_3Data extends NeoData {
		public FatherWithFamilyToMaleRule_3Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_3CoData extends NeoData {
		public FatherWithFamilyToMaleRule_3CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.67
	public FatherWithFamilyToMaleRule_7Access getRule_FatherWithFamilyToMaleRule_7() {
		return new FatherWithFamilyToMaleRule_7Access();
	}
	
	public class FatherWithFamilyToMaleRule_7Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_7Data, FatherWithFamilyToMaleRule_7CoData, FatherWithFamilyToMaleRule_7Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(67);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_7Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_7CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_7Mask mask() {
			return new FatherWithFamilyToMaleRule_7Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_7Data extends NeoData {
		public FatherWithFamilyToMaleRule_7Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_7CoData extends NeoData {
		public FatherWithFamilyToMaleRule_7CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.68
	public FatherWithFamilyToMaleRule_8Access getRule_FatherWithFamilyToMaleRule_8() {
		return new FatherWithFamilyToMaleRule_8Access();
	}
	
	public class FatherWithFamilyToMaleRule_8Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_8Data, FatherWithFamilyToMaleRule_8CoData, FatherWithFamilyToMaleRule_8Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(68);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_8Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_8CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_8Mask mask() {
			return new FatherWithFamilyToMaleRule_8Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_8Data extends NeoData {
		public FatherWithFamilyToMaleRule_8Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_8CoData extends NeoData {
		public FatherWithFamilyToMaleRule_8CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.69
	public FatherWithFamilyToMaleRule_9Access getRule_FatherWithFamilyToMaleRule_9() {
		return new FatherWithFamilyToMaleRule_9Access();
	}
	
	public class FatherWithFamilyToMaleRule_9Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_9Data, FatherWithFamilyToMaleRule_9CoData, FatherWithFamilyToMaleRule_9Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(69);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_9Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_9CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_9Mask mask() {
			return new FatherWithFamilyToMaleRule_9Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_9Data extends NeoData {
		public FatherWithFamilyToMaleRule_9Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_9CoData extends NeoData {
		public FatherWithFamilyToMaleRule_9CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.70
	public FatherWithFamilyToMaleRule_32Access getRule_FatherWithFamilyToMaleRule_32() {
		return new FatherWithFamilyToMaleRule_32Access();
	}
	
	public class FatherWithFamilyToMaleRule_32Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_32Data, FatherWithFamilyToMaleRule_32CoData, FatherWithFamilyToMaleRule_32Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(70);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_32Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_32Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_32CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_32CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_32Mask mask() {
			return new FatherWithFamilyToMaleRule_32Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_32Data extends NeoData {
		public FatherWithFamilyToMaleRule_32Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_32CoData extends NeoData {
		public FatherWithFamilyToMaleRule_32CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_32Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.71
	public FatherWithFamilyToMaleRule_33Access getRule_FatherWithFamilyToMaleRule_33() {
		return new FatherWithFamilyToMaleRule_33Access();
	}
	
	public class FatherWithFamilyToMaleRule_33Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_33Data, FatherWithFamilyToMaleRule_33CoData, FatherWithFamilyToMaleRule_33Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(71);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_33Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_33Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_33CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_33CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_33Mask mask() {
			return new FatherWithFamilyToMaleRule_33Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_33Data extends NeoData {
		public FatherWithFamilyToMaleRule_33Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_33CoData extends NeoData {
		public FatherWithFamilyToMaleRule_33CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_33Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.72
	public FatherWithFamilyToMaleRule_40Access getRule_FatherWithFamilyToMaleRule_40() {
		return new FatherWithFamilyToMaleRule_40Access();
	}
	
	public class FatherWithFamilyToMaleRule_40Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_40Data, FatherWithFamilyToMaleRule_40CoData, FatherWithFamilyToMaleRule_40Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(72);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_40Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_40Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_40CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_40CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_40Mask mask() {
			return new FatherWithFamilyToMaleRule_40Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_40Data extends NeoData {
		public FatherWithFamilyToMaleRule_40Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_40CoData extends NeoData {
		public FatherWithFamilyToMaleRule_40CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_40Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.73
	public FatherWithFamilyToMaleRule_41Access getRule_FatherWithFamilyToMaleRule_41() {
		return new FatherWithFamilyToMaleRule_41Access();
	}
	
	public class FatherWithFamilyToMaleRule_41Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_41Data, FatherWithFamilyToMaleRule_41CoData, FatherWithFamilyToMaleRule_41Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(73);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_41Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_41Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_41CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_41CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_41Mask mask() {
			return new FatherWithFamilyToMaleRule_41Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_41Data extends NeoData {
		public FatherWithFamilyToMaleRule_41Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_41CoData extends NeoData {
		public FatherWithFamilyToMaleRule_41CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_41Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.74
	public FatherWithFamilyToMaleRule_56Access getRule_FatherWithFamilyToMaleRule_56() {
		return new FatherWithFamilyToMaleRule_56Access();
	}
	
	public class FatherWithFamilyToMaleRule_56Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_56Data, FatherWithFamilyToMaleRule_56CoData, FatherWithFamilyToMaleRule_56Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(74);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_56Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_56Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_56CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_56CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_56Mask mask() {
			return new FatherWithFamilyToMaleRule_56Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_56Data extends NeoData {
		public FatherWithFamilyToMaleRule_56Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_56CoData extends NeoData {
		public FatherWithFamilyToMaleRule_56CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_56Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.75
	public FatherWithFamilyToMaleRule_57Access getRule_FatherWithFamilyToMaleRule_57() {
		return new FatherWithFamilyToMaleRule_57Access();
	}
	
	public class FatherWithFamilyToMaleRule_57Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_57Data, FatherWithFamilyToMaleRule_57CoData, FatherWithFamilyToMaleRule_57Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(75);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_57Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_57Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_57CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_57CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_57Mask mask() {
			return new FatherWithFamilyToMaleRule_57Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_57Data extends NeoData {
		public FatherWithFamilyToMaleRule_57Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_57CoData extends NeoData {
		public FatherWithFamilyToMaleRule_57CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_57Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.76
	public FatherWithFamilyToMaleRule_97Access getRule_FatherWithFamilyToMaleRule_97() {
		return new FatherWithFamilyToMaleRule_97Access();
	}
	
	public class FatherWithFamilyToMaleRule_97Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_97Data, FatherWithFamilyToMaleRule_97CoData, FatherWithFamilyToMaleRule_97Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(76);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_97Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_97CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_97Mask mask() {
			return new FatherWithFamilyToMaleRule_97Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_97Data extends NeoData {
		public FatherWithFamilyToMaleRule_97Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_97CoData extends NeoData {
		public FatherWithFamilyToMaleRule_97CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.77
	public FatherWithFamilyToMaleRule_105Access getRule_FatherWithFamilyToMaleRule_105() {
		return new FatherWithFamilyToMaleRule_105Access();
	}
	
	public class FatherWithFamilyToMaleRule_105Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_105Data, FatherWithFamilyToMaleRule_105CoData, FatherWithFamilyToMaleRule_105Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(77);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_105Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_105Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_105CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_105CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_105Mask mask() {
			return new FatherWithFamilyToMaleRule_105Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_105Data extends NeoData {
		public FatherWithFamilyToMaleRule_105Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_105CoData extends NeoData {
		public FatherWithFamilyToMaleRule_105CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_105Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.78
	public FatherWithFamilyToMaleRule_121Access getRule_FatherWithFamilyToMaleRule_121() {
		return new FatherWithFamilyToMaleRule_121Access();
	}
	
	public class FatherWithFamilyToMaleRule_121Access extends NeoRuleCoAccess<FatherWithFamilyToMaleRule_121Data, FatherWithFamilyToMaleRule_121CoData, FatherWithFamilyToMaleRule_121Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(78);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<FatherWithFamilyToMaleRule_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_121Data(d));
		}
			
		@Override
		public Stream<FatherWithFamilyToMaleRule_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherWithFamilyToMaleRule_121CoData(d));
		}
		
		@Override
		public FatherWithFamilyToMaleRule_121Mask mask() {
			return new FatherWithFamilyToMaleRule_121Mask();
		}
	}
	
	public class FatherWithFamilyToMaleRule_121Data extends NeoData {
		public FatherWithFamilyToMaleRule_121Data(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_121CoData extends NeoData {
		public FatherWithFamilyToMaleRule_121CoData(Record data) {
		
		}
	}
	
	public class FatherWithFamilyToMaleRule_121Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.79
	public MotherToFemaleRuleAccess getRule_MotherToFemaleRule() {
		return new MotherToFemaleRuleAccess();
	}
	
	public class MotherToFemaleRuleAccess extends NeoRuleCoAccess<MotherToFemaleRuleData, MotherToFemaleRuleCoData, MotherToFemaleRuleMask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(79);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRuleData(d));
		}
			
		@Override
		public Stream<MotherToFemaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRuleCoData(d));
		}
		
		@Override
		public MotherToFemaleRuleMask mask() {
			return new MotherToFemaleRuleMask();
		}
	}
	
	public class MotherToFemaleRuleData extends NeoData {
		public MotherToFemaleRuleData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRuleCoData extends NeoData {
		public MotherToFemaleRuleCoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.80
	public MotherToFemaleRule_1Access getRule_MotherToFemaleRule_1() {
		return new MotherToFemaleRule_1Access();
	}
	
	public class MotherToFemaleRule_1Access extends NeoRuleCoAccess<MotherToFemaleRule_1Data, MotherToFemaleRule_1CoData, MotherToFemaleRule_1Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(80);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_1Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_1CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_1Mask mask() {
			return new MotherToFemaleRule_1Mask();
		}
	}
	
	public class MotherToFemaleRule_1Data extends NeoData {
		public MotherToFemaleRule_1Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_1CoData extends NeoData {
		public MotherToFemaleRule_1CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.81
	public MotherToFemaleRule_2Access getRule_MotherToFemaleRule_2() {
		return new MotherToFemaleRule_2Access();
	}
	
	public class MotherToFemaleRule_2Access extends NeoRuleCoAccess<MotherToFemaleRule_2Data, MotherToFemaleRule_2CoData, MotherToFemaleRule_2Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(81);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_2Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_2CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_2Mask mask() {
			return new MotherToFemaleRule_2Mask();
		}
	}
	
	public class MotherToFemaleRule_2Data extends NeoData {
		public MotherToFemaleRule_2Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_2CoData extends NeoData {
		public MotherToFemaleRule_2CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.82
	public MotherToFemaleRule_3Access getRule_MotherToFemaleRule_3() {
		return new MotherToFemaleRule_3Access();
	}
	
	public class MotherToFemaleRule_3Access extends NeoRuleCoAccess<MotherToFemaleRule_3Data, MotherToFemaleRule_3CoData, MotherToFemaleRule_3Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(82);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_3Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_3CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_3Mask mask() {
			return new MotherToFemaleRule_3Mask();
		}
	}
	
	public class MotherToFemaleRule_3Data extends NeoData {
		public MotherToFemaleRule_3Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_3CoData extends NeoData {
		public MotherToFemaleRule_3CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.83
	public MotherToFemaleRule_7Access getRule_MotherToFemaleRule_7() {
		return new MotherToFemaleRule_7Access();
	}
	
	public class MotherToFemaleRule_7Access extends NeoRuleCoAccess<MotherToFemaleRule_7Data, MotherToFemaleRule_7CoData, MotherToFemaleRule_7Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(83);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_7Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_7CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_7Mask mask() {
			return new MotherToFemaleRule_7Mask();
		}
	}
	
	public class MotherToFemaleRule_7Data extends NeoData {
		public MotherToFemaleRule_7Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_7CoData extends NeoData {
		public MotherToFemaleRule_7CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.84
	public MotherToFemaleRule_8Access getRule_MotherToFemaleRule_8() {
		return new MotherToFemaleRule_8Access();
	}
	
	public class MotherToFemaleRule_8Access extends NeoRuleCoAccess<MotherToFemaleRule_8Data, MotherToFemaleRule_8CoData, MotherToFemaleRule_8Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(84);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_8Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_8CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_8Mask mask() {
			return new MotherToFemaleRule_8Mask();
		}
	}
	
	public class MotherToFemaleRule_8Data extends NeoData {
		public MotherToFemaleRule_8Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_8CoData extends NeoData {
		public MotherToFemaleRule_8CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.85
	public MotherToFemaleRule_9Access getRule_MotherToFemaleRule_9() {
		return new MotherToFemaleRule_9Access();
	}
	
	public class MotherToFemaleRule_9Access extends NeoRuleCoAccess<MotherToFemaleRule_9Data, MotherToFemaleRule_9CoData, MotherToFemaleRule_9Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(85);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_9Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_9CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_9Mask mask() {
			return new MotherToFemaleRule_9Mask();
		}
	}
	
	public class MotherToFemaleRule_9Data extends NeoData {
		public MotherToFemaleRule_9Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_9CoData extends NeoData {
		public MotherToFemaleRule_9CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.86
	public MotherToFemaleRule_25Access getRule_MotherToFemaleRule_25() {
		return new MotherToFemaleRule_25Access();
	}
	
	public class MotherToFemaleRule_25Access extends NeoRuleCoAccess<MotherToFemaleRule_25Data, MotherToFemaleRule_25CoData, MotherToFemaleRule_25Mask> {
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(86);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherToFemaleRule_25Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_25Data(d));
		}
			
		@Override
		public Stream<MotherToFemaleRule_25CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherToFemaleRule_25CoData(d));
		}
		
		@Override
		public MotherToFemaleRule_25Mask mask() {
			return new MotherToFemaleRule_25Mask();
		}
	}
	
	public class MotherToFemaleRule_25Data extends NeoData {
		public MotherToFemaleRule_25Data(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_25CoData extends NeoData {
		public MotherToFemaleRule_25CoData(Record data) {
		
		}
	}
	
	public class MotherToFemaleRule_25Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.87
	public MotherWithFamilyToFemaleRuleAccess getRule_MotherWithFamilyToFemaleRule() {
		return new MotherWithFamilyToFemaleRuleAccess();
	}
	
	public class MotherWithFamilyToFemaleRuleAccess extends NeoRuleCoAccess<MotherWithFamilyToFemaleRuleData, MotherWithFamilyToFemaleRuleCoData, MotherWithFamilyToFemaleRuleMask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(87);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRuleData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRuleData(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRuleCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRuleCoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRuleMask mask() {
			return new MotherWithFamilyToFemaleRuleMask();
		}
	}
	
	public class MotherWithFamilyToFemaleRuleData extends NeoData {
		public MotherWithFamilyToFemaleRuleData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRuleCoData extends NeoData {
		public MotherWithFamilyToFemaleRuleCoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRuleMask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.88
	public MotherWithFamilyToFemaleRule_1Access getRule_MotherWithFamilyToFemaleRule_1() {
		return new MotherWithFamilyToFemaleRule_1Access();
	}
	
	public class MotherWithFamilyToFemaleRule_1Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_1Data, MotherWithFamilyToFemaleRule_1CoData, MotherWithFamilyToFemaleRule_1Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(88);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_1Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_1Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_1CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_1CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_1Mask mask() {
			return new MotherWithFamilyToFemaleRule_1Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_1Data extends NeoData {
		public MotherWithFamilyToFemaleRule_1Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_1CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_1CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_1Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.89
	public MotherWithFamilyToFemaleRule_2Access getRule_MotherWithFamilyToFemaleRule_2() {
		return new MotherWithFamilyToFemaleRule_2Access();
	}
	
	public class MotherWithFamilyToFemaleRule_2Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_2Data, MotherWithFamilyToFemaleRule_2CoData, MotherWithFamilyToFemaleRule_2Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(89);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_2Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_2Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_2CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_2CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_2Mask mask() {
			return new MotherWithFamilyToFemaleRule_2Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_2Data extends NeoData {
		public MotherWithFamilyToFemaleRule_2Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_2CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_2CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_2Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.90
	public MotherWithFamilyToFemaleRule_3Access getRule_MotherWithFamilyToFemaleRule_3() {
		return new MotherWithFamilyToFemaleRule_3Access();
	}
	
	public class MotherWithFamilyToFemaleRule_3Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_3Data, MotherWithFamilyToFemaleRule_3CoData, MotherWithFamilyToFemaleRule_3Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(90);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_3Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_3Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_3CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_3CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_3Mask mask() {
			return new MotherWithFamilyToFemaleRule_3Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_3Data extends NeoData {
		public MotherWithFamilyToFemaleRule_3Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_3CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_3CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_3Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.91
	public MotherWithFamilyToFemaleRule_7Access getRule_MotherWithFamilyToFemaleRule_7() {
		return new MotherWithFamilyToFemaleRule_7Access();
	}
	
	public class MotherWithFamilyToFemaleRule_7Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_7Data, MotherWithFamilyToFemaleRule_7CoData, MotherWithFamilyToFemaleRule_7Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		public final String _param__personName = "personName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(91);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_7Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_7Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_7CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_7CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_7Mask mask() {
			return new MotherWithFamilyToFemaleRule_7Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_7Data extends NeoData {
		public MotherWithFamilyToFemaleRule_7Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_7CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_7CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_7Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.92
	public MotherWithFamilyToFemaleRule_8Access getRule_MotherWithFamilyToFemaleRule_8() {
		return new MotherWithFamilyToFemaleRule_8Access();
	}
	
	public class MotherWithFamilyToFemaleRule_8Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_8Data, MotherWithFamilyToFemaleRule_8CoData, MotherWithFamilyToFemaleRule_8Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(92);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_8Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_8Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_8CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_8CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_8Mask mask() {
			return new MotherWithFamilyToFemaleRule_8Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_8Data extends NeoData {
		public MotherWithFamilyToFemaleRule_8Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_8CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_8CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_8Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.93
	public MotherWithFamilyToFemaleRule_9Access getRule_MotherWithFamilyToFemaleRule_9() {
		return new MotherWithFamilyToFemaleRule_9Access();
	}
	
	public class MotherWithFamilyToFemaleRule_9Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_9Data, MotherWithFamilyToFemaleRule_9CoData, MotherWithFamilyToFemaleRule_9Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(93);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_9Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_9Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_9CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_9CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_9Mask mask() {
			return new MotherWithFamilyToFemaleRule_9Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_9Data extends NeoData {
		public MotherWithFamilyToFemaleRule_9Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_9CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_9CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_9Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.94
	public MotherWithFamilyToFemaleRule_32Access getRule_MotherWithFamilyToFemaleRule_32() {
		return new MotherWithFamilyToFemaleRule_32Access();
	}
	
	public class MotherWithFamilyToFemaleRule_32Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_32Data, MotherWithFamilyToFemaleRule_32CoData, MotherWithFamilyToFemaleRule_32Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(94);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_32Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_32Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_32CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_32CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_32Mask mask() {
			return new MotherWithFamilyToFemaleRule_32Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_32Data extends NeoData {
		public MotherWithFamilyToFemaleRule_32Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_32CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_32CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_32Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.95
	public MotherWithFamilyToFemaleRule_33Access getRule_MotherWithFamilyToFemaleRule_33() {
		return new MotherWithFamilyToFemaleRule_33Access();
	}
	
	public class MotherWithFamilyToFemaleRule_33Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_33Data, MotherWithFamilyToFemaleRule_33CoData, MotherWithFamilyToFemaleRule_33Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(95);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_33Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_33Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_33CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_33CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_33Mask mask() {
			return new MotherWithFamilyToFemaleRule_33Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_33Data extends NeoData {
		public MotherWithFamilyToFemaleRule_33Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_33CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_33CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_33Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.96
	public MotherWithFamilyToFemaleRule_40Access getRule_MotherWithFamilyToFemaleRule_40() {
		return new MotherWithFamilyToFemaleRule_40Access();
	}
	
	public class MotherWithFamilyToFemaleRule_40Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_40Data, MotherWithFamilyToFemaleRule_40CoData, MotherWithFamilyToFemaleRule_40Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(96);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_40Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_40Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_40CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_40CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_40Mask mask() {
			return new MotherWithFamilyToFemaleRule_40Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_40Data extends NeoData {
		public MotherWithFamilyToFemaleRule_40Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_40CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_40CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_40Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.97
	public MotherWithFamilyToFemaleRule_41Access getRule_MotherWithFamilyToFemaleRule_41() {
		return new MotherWithFamilyToFemaleRule_41Access();
	}
	
	public class MotherWithFamilyToFemaleRule_41Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_41Data, MotherWithFamilyToFemaleRule_41CoData, MotherWithFamilyToFemaleRule_41Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(97);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_41Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_41Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_41CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_41CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_41Mask mask() {
			return new MotherWithFamilyToFemaleRule_41Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_41Data extends NeoData {
		public MotherWithFamilyToFemaleRule_41Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_41CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_41CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_41Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.98
	public MotherWithFamilyToFemaleRule_56Access getRule_MotherWithFamilyToFemaleRule_56() {
		return new MotherWithFamilyToFemaleRule_56Access();
	}
	
	public class MotherWithFamilyToFemaleRule_56Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_56Data, MotherWithFamilyToFemaleRule_56CoData, MotherWithFamilyToFemaleRule_56Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(98);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_56Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_56Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_56CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_56CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_56Mask mask() {
			return new MotherWithFamilyToFemaleRule_56Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_56Data extends NeoData {
		public MotherWithFamilyToFemaleRule_56Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_56CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_56CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_56Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.99
	public MotherWithFamilyToFemaleRule_57Access getRule_MotherWithFamilyToFemaleRule_57() {
		return new MotherWithFamilyToFemaleRule_57Access();
	}
	
	public class MotherWithFamilyToFemaleRule_57Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_57Data, MotherWithFamilyToFemaleRule_57CoData, MotherWithFamilyToFemaleRule_57Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(99);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_57Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_57Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_57CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_57CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_57Mask mask() {
			return new MotherWithFamilyToFemaleRule_57Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_57Data extends NeoData {
		public MotherWithFamilyToFemaleRule_57Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_57CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_57CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_57Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.100
	public MotherWithFamilyToFemaleRule_97Access getRule_MotherWithFamilyToFemaleRule_97() {
		return new MotherWithFamilyToFemaleRule_97Access();
	}
	
	public class MotherWithFamilyToFemaleRule_97Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_97Data, MotherWithFamilyToFemaleRule_97CoData, MotherWithFamilyToFemaleRule_97Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(100);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_97Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_97Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_97CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_97CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_97Mask mask() {
			return new MotherWithFamilyToFemaleRule_97Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_97Data extends NeoData {
		public MotherWithFamilyToFemaleRule_97Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_97CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_97CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_97Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.101
	public MotherWithFamilyToFemaleRule_105Access getRule_MotherWithFamilyToFemaleRule_105() {
		return new MotherWithFamilyToFemaleRule_105Access();
	}
	
	public class MotherWithFamilyToFemaleRule_105Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_105Data, MotherWithFamilyToFemaleRule_105CoData, MotherWithFamilyToFemaleRule_105Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(101);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_105Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_105Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_105CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_105CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_105Mask mask() {
			return new MotherWithFamilyToFemaleRule_105Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_105Data extends NeoData {
		public MotherWithFamilyToFemaleRule_105Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_105CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_105CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_105Mask extends NeoMask {
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/tgg-gen/org/benchmarx/eneo/f2p/tgg/F2P_MI.msl#//@entities.102
	public MotherWithFamilyToFemaleRule_121Access getRule_MotherWithFamilyToFemaleRule_121() {
		return new MotherWithFamilyToFemaleRule_121Access();
	}
	
	public class MotherWithFamilyToFemaleRule_121Access extends NeoRuleCoAccess<MotherWithFamilyToFemaleRule_121Data, MotherWithFamilyToFemaleRule_121CoData, MotherWithFamilyToFemaleRule_121Mask> {
		public final String _fr = "fr";
		public final String _f = "f";
		public final String _fm = "fm";
		public final String _pr = "pr";
		public final String _p = "p";
		
		public final String _param____srcModelName = "__srcModelName";
		public final String _param__fname = "fname";
		public final String _param__memberName = "memberName";
		public final String _param____trgModelName = "__trgModelName";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(102);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<MotherWithFamilyToFemaleRule_121Data> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_121Data(d));
		}
			
		@Override
		public Stream<MotherWithFamilyToFemaleRule_121CoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherWithFamilyToFemaleRule_121CoData(d));
		}
		
		@Override
		public MotherWithFamilyToFemaleRule_121Mask mask() {
			return new MotherWithFamilyToFemaleRule_121Mask();
		}
	}
	
	public class MotherWithFamilyToFemaleRule_121Data extends NeoData {
		public MotherWithFamilyToFemaleRule_121Data(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_121CoData extends NeoData {
		public MotherWithFamilyToFemaleRule_121CoData(Record data) {
		
		}
	}
	
	public class MotherWithFamilyToFemaleRule_121Mask extends NeoMask {
	}
}
