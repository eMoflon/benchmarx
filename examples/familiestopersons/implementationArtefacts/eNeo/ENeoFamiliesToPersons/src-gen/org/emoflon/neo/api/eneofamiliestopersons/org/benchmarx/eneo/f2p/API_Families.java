/** 
 * EMSL-API generated by eMoflon::Neo - Do not edit as this file will be overwritten
 */
package org.emoflon.neo.api.eneofamiliestopersons.org.benchmarx.eneo.f2p;

import org.emoflon.neo.cypher.common.*;
import org.emoflon.neo.cypher.constraints.*;
import org.emoflon.neo.cypher.factories.*;
import org.emoflon.neo.cypher.models.*;
import org.emoflon.neo.cypher.patterns.*;
import org.emoflon.neo.cypher.rules.*;
import org.emoflon.neo.engine.api.patterns.*;
import org.emoflon.neo.engine.api.constraints.*;
import org.emoflon.neo.engine.api.rules.*;
import org.emoflon.neo.emsl.eMSL.*;
import org.emoflon.neo.emsl.util.*;
import org.neo4j.driver.Value;
import org.neo4j.driver.Record;
import org.eclipse.emf.common.util.URI;
import org.emoflon.neo.api.eneofamiliestopersons.API_Common;
import java.util.Collection;
import java.util.HashSet;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import java.util.Optional;
import java.time.LocalDate;

@SuppressWarnings("unused")
public class API_Families {
	private EMSL_Spec spec;
	private NeoCoreBuilder builder;

	/** Use this constructor for default values */
	public API_Families(NeoCoreBuilder builder) {
		this(builder, API_Common.PLATFORM_RESOURCE_URI, API_Common.PLATFORM_PLUGIN_URI, API_Common.NEOCORE_URI_INSTALLED);
	}

	/** Use this constructor to configure values for loading EMSL files */
	public API_Families(NeoCoreBuilder builder, String platformResourceURIRoot, String platformPluginURIRoot, String neocoreURI){
		this((EMSL_Spec) EMSLUtil.loadSpecification("platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl", platformResourceURIRoot, platformPluginURIRoot, neocoreURI), builder);
	}

	public API_Families(EMSL_Spec spec, NeoCoreBuilder builder) {
		this.spec = spec;
		this.builder = builder;
	}

	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.0
	public Metamodel getMetamodel_Families(){
		return (Metamodel) spec.getEntities().get(0);
	}
	
	public static final String Families__FamilyRegister = "Families__FamilyRegister";
	public static final String Families__Family = "Families__Family";
	public static final String Families__FamilyMember = "Families__FamilyMember";
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.1
	public IConstraint getConstraint_NoTwoMothers() {
		var c = (Constraint) spec.getEntities().get(1);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.2
	public TwoMothersAccess getPattern_TwoMothers() {
		return new TwoMothersAccess();
	}
	
	public class TwoMothersAccess extends NeoPatternAccess<TwoMothersData, TwoMothersMask> {
		public final String _m1 = "m1";
		public final String _m2 = "m2";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(2);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoMothersData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoMothersData(d));
		}
		
		@Override
		public TwoMothersMask mask() {
			return new TwoMothersMask();
		}
	}
	
	public class TwoMothersData extends NeoData {
		public final M1Node _m1;
		public final M2Node _m2;
		public final FNode _f;
		public final F_mother_0_m1Rel _f_mother_0_m1;
		public final F_mother_1_m2Rel _f_mother_1_m2;
		
		public TwoMothersData(Record data) {
			var _m1 = data.get("m1");
			this._m1 = new M1Node(_m1);
			var _m2 = data.get("m2");
			this._m2 = new M2Node(_m2);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_mother_0_m1 = data.get("f_mother_0_m1");
			this._f_mother_0_m1 = new F_mother_0_m1Rel(_f_mother_0_m1);
			var _f_mother_1_m2 = data.get("f_mother_1_m2");
			this._f_mother_1_m2 = new F_mother_1_m2Rel(_f_mother_1_m2);
		}
		
		
		public class M1Node {
			public int _id;
			public String _name;
			public String _ename;
			
			public M1Node(Value _m1) {
				if(!_m1.get("id").isNull())
					this._id = _m1.get("id").asInt();
				if(!_m1.get("name").isNull())
					this._name = _m1.get("name").asString();
				if(!_m1.get("ename").isNull())
					this._ename = _m1.get("ename").asString();
			}
		}
		
		public class M2Node {
			public int _id;
			public String _name;
			public String _ename;
			
			public M2Node(Value _m2) {
				if(!_m2.get("id").isNull())
					this._id = _m2.get("id").asInt();
				if(!_m2.get("name").isNull())
					this._name = _m2.get("name").asString();
				if(!_m2.get("ename").isNull())
					this._ename = _m2.get("ename").asString();
			}
		}
		
		public class FNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("id").isNull())
					this._id = _f.get("id").asInt();
				if(!_f.get("name").isNull())
					this._name = _f.get("name").asString();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_mother_0_m1Rel {
		
			public F_mother_0_m1Rel(Value _f_mother_0_m1) {
			}
		}
		public class F_mother_1_m2Rel {
		
			public F_mother_1_m2Rel(Value _f_mother_1_m2) {
			}
		}
	}
	
	public class TwoMothersMask extends NeoMask {
		public TwoMothersMask setM1(Long value) {
			nodeMask.put("m1", value);
			return this;
		}
		public TwoMothersMask setM1Id(int value) {
			attributeMask.put("m1.id", value);
			return this;
		}
		public TwoMothersMask setM1Name(String value) {
			attributeMask.put("m1.name", value);
			return this;
		}
		public TwoMothersMask setM1Ename(String value) {
			attributeMask.put("m1.ename", value);
			return this;
		}
		public TwoMothersMask setM2(Long value) {
			nodeMask.put("m2", value);
			return this;
		}
		public TwoMothersMask setM2Id(int value) {
			attributeMask.put("m2.id", value);
			return this;
		}
		public TwoMothersMask setM2Name(String value) {
			attributeMask.put("m2.name", value);
			return this;
		}
		public TwoMothersMask setM2Ename(String value) {
			attributeMask.put("m2.ename", value);
			return this;
		}
		public TwoMothersMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TwoMothersMask setFId(int value) {
			attributeMask.put("f.id", value);
			return this;
		}
		public TwoMothersMask setFName(String value) {
			attributeMask.put("f.name", value);
			return this;
		}
		public TwoMothersMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.3
	public IConstraint getConstraint_NoTwoFathers() {
		var c = (Constraint) spec.getEntities().get(3);
		return NeoConstraintFactory.createNeoConstraint(c, builder);
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.4
	public TwoFathersAccess getPattern_TwoFathers() {
		return new TwoFathersAccess();
	}
	
	public class TwoFathersAccess extends NeoPatternAccess<TwoFathersData, TwoFathersMask> {
		public final String _m1 = "m1";
		public final String _m2 = "m2";
		public final String _f = "f";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(4);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<TwoFathersData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new TwoFathersData(d));
		}
		
		@Override
		public TwoFathersMask mask() {
			return new TwoFathersMask();
		}
	}
	
	public class TwoFathersData extends NeoData {
		public final M1Node _m1;
		public final M2Node _m2;
		public final FNode _f;
		public final F_father_0_m1Rel _f_father_0_m1;
		public final F_father_1_m2Rel _f_father_1_m2;
		
		public TwoFathersData(Record data) {
			var _m1 = data.get("m1");
			this._m1 = new M1Node(_m1);
			var _m2 = data.get("m2");
			this._m2 = new M2Node(_m2);
			var _f = data.get("f");
			this._f = new FNode(_f);
			var _f_father_0_m1 = data.get("f_father_0_m1");
			this._f_father_0_m1 = new F_father_0_m1Rel(_f_father_0_m1);
			var _f_father_1_m2 = data.get("f_father_1_m2");
			this._f_father_1_m2 = new F_father_1_m2Rel(_f_father_1_m2);
		}
		
		
		public class M1Node {
			public int _id;
			public String _name;
			public String _ename;
			
			public M1Node(Value _m1) {
				if(!_m1.get("id").isNull())
					this._id = _m1.get("id").asInt();
				if(!_m1.get("name").isNull())
					this._name = _m1.get("name").asString();
				if(!_m1.get("ename").isNull())
					this._ename = _m1.get("ename").asString();
			}
		}
		
		public class M2Node {
			public int _id;
			public String _name;
			public String _ename;
			
			public M2Node(Value _m2) {
				if(!_m2.get("id").isNull())
					this._id = _m2.get("id").asInt();
				if(!_m2.get("name").isNull())
					this._name = _m2.get("name").asString();
				if(!_m2.get("ename").isNull())
					this._ename = _m2.get("ename").asString();
			}
		}
		
		public class FNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FNode(Value _f) {
				if(!_f.get("id").isNull())
					this._id = _f.get("id").asInt();
				if(!_f.get("name").isNull())
					this._name = _f.get("name").asString();
				if(!_f.get("ename").isNull())
					this._ename = _f.get("ename").asString();
			}
		}
		
		public class F_father_0_m1Rel {
		
			public F_father_0_m1Rel(Value _f_father_0_m1) {
			}
		}
		public class F_father_1_m2Rel {
		
			public F_father_1_m2Rel(Value _f_father_1_m2) {
			}
		}
	}
	
	public class TwoFathersMask extends NeoMask {
		public TwoFathersMask setM1(Long value) {
			nodeMask.put("m1", value);
			return this;
		}
		public TwoFathersMask setM1Id(int value) {
			attributeMask.put("m1.id", value);
			return this;
		}
		public TwoFathersMask setM1Name(String value) {
			attributeMask.put("m1.name", value);
			return this;
		}
		public TwoFathersMask setM1Ename(String value) {
			attributeMask.put("m1.ename", value);
			return this;
		}
		public TwoFathersMask setM2(Long value) {
			nodeMask.put("m2", value);
			return this;
		}
		public TwoFathersMask setM2Id(int value) {
			attributeMask.put("m2.id", value);
			return this;
		}
		public TwoFathersMask setM2Name(String value) {
			attributeMask.put("m2.name", value);
			return this;
		}
		public TwoFathersMask setM2Ename(String value) {
			attributeMask.put("m2.ename", value);
			return this;
		}
		public TwoFathersMask setF(Long value) {
			nodeMask.put("f", value);
			return this;
		}
		public TwoFathersMask setFId(int value) {
			attributeMask.put("f.id", value);
			return this;
		}
		public TwoFathersMask setFName(String value) {
			attributeMask.put("f.name", value);
			return this;
		}
		public TwoFathersMask setFEname(String value) {
			attributeMask.put("f.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.5
	public FamilyPatternAccess getPattern_FamilyPattern() {
		return new FamilyPatternAccess();
	}
	
	public class FamilyPatternAccess extends NeoPatternAccess<FamilyPatternData, FamilyPatternMask> {
		public final String _register = "register";
		public final String _family = "family";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(5);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FamilyPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FamilyPatternData(d));
		}
		
		@Override
		public FamilyPatternMask mask() {
			return new FamilyPatternMask();
		}
	}
	
	public class FamilyPatternData extends NeoData {
		public final RegisterNode _register;
		public final Register_families_0_familyRel _register_families_0_family;
		public final FamilyNode _family;
		
		public FamilyPatternData(Record data) {
			var _register = data.get("register");
			this._register = new RegisterNode(_register);
			var _register_families_0_family = data.get("register_families_0_family");
			this._register_families_0_family = new Register_families_0_familyRel(_register_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RegisterNode {
			public String _ename;
			
			public RegisterNode(Value _register) {
				if(!_register.get("ename").isNull())
					this._ename = _register.get("ename").asString();
			}
		}
		
		public class Register_families_0_familyRel {
		
			public Register_families_0_familyRel(Value _register_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class FamilyPatternMask extends NeoMask {
		public FamilyPatternMask setRegister(Long value) {
			nodeMask.put("register", value);
			return this;
		}
		public FamilyPatternMask setRegisterEname(String value) {
			attributeMask.put("register.ename", value);
			return this;
		}
		public FamilyPatternMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public FamilyPatternMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public FamilyPatternMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public FamilyPatternMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.6
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.7
	public FatherPatternAccess getPattern_FatherPattern() {
		return new FatherPatternAccess();
	}
	
	public class FatherPatternAccess extends NeoPatternAccess<FatherPatternData, FatherPatternMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(7);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<FatherPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new FatherPatternData(d));
		}
		
		@Override
		public FatherPatternMask mask() {
			return new FatherPatternMask();
		}
	}
	
	public class FatherPatternData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_father_0_memberRel _family_father_0_member;
		
		public FatherPatternData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_father_0_member = data.get("family_father_0_member");
			this._family_father_0_member = new Family_father_0_memberRel(_family_father_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_father_0_memberRel {
		
			public Family_father_0_memberRel(Value _family_father_0_member) {
			}
		}
	}
	
	public class FatherPatternMask extends NeoMask {
		public FatherPatternMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public FatherPatternMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public FatherPatternMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public FatherPatternMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public FatherPatternMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public FatherPatternMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public FatherPatternMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public FatherPatternMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.8
	public MotherPatternAccess getPattern_MotherPattern() {
		return new MotherPatternAccess();
	}
	
	public class MotherPatternAccess extends NeoPatternAccess<MotherPatternData, MotherPatternMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(8);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<MotherPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new MotherPatternData(d));
		}
		
		@Override
		public MotherPatternMask mask() {
			return new MotherPatternMask();
		}
	}
	
	public class MotherPatternData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_mother_0_memberRel _family_mother_0_member;
		
		public MotherPatternData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_mother_0_member = data.get("family_mother_0_member");
			this._family_mother_0_member = new Family_mother_0_memberRel(_family_mother_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_mother_0_memberRel {
		
			public Family_mother_0_memberRel(Value _family_mother_0_member) {
			}
		}
	}
	
	public class MotherPatternMask extends NeoMask {
		public MotherPatternMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public MotherPatternMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public MotherPatternMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public MotherPatternMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public MotherPatternMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public MotherPatternMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public MotherPatternMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public MotherPatternMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.9
	public DaughterPatternAccess getPattern_DaughterPattern() {
		return new DaughterPatternAccess();
	}
	
	public class DaughterPatternAccess extends NeoPatternAccess<DaughterPatternData, DaughterPatternMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(9);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<DaughterPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DaughterPatternData(d));
		}
		
		@Override
		public DaughterPatternMask mask() {
			return new DaughterPatternMask();
		}
	}
	
	public class DaughterPatternData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		
		public DaughterPatternData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
	}
	
	public class DaughterPatternMask extends NeoMask {
		public DaughterPatternMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public DaughterPatternMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public DaughterPatternMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public DaughterPatternMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public DaughterPatternMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DaughterPatternMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DaughterPatternMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DaughterPatternMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.10
	public SonPatternAccess getPattern_SonPattern() {
		return new SonPatternAccess();
	}
	
	public class SonPatternAccess extends NeoPatternAccess<SonPatternData, SonPatternMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		
		@Override
		public NeoPattern pattern(){
			var p = (Pattern) spec.getEntities().get(10);
			return NeoPatternFactory.createNeoPattern(p, builder);
		}
		
		@Override
		public Stream<SonPatternData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SonPatternData(d));
		}
		
		@Override
		public SonPatternMask mask() {
			return new SonPatternMask();
		}
	}
	
	public class SonPatternData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_sons_0_memberRel _family_sons_0_member;
		
		public SonPatternData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_sons_0_member = data.get("family_sons_0_member");
			this._family_sons_0_member = new Family_sons_0_memberRel(_family_sons_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_sons_0_memberRel {
		
			public Family_sons_0_memberRel(Value _family_sons_0_member) {
			}
		}
	}
	
	public class SonPatternMask extends NeoMask {
		public SonPatternMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public SonPatternMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public SonPatternMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public SonPatternMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public SonPatternMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public SonPatternMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public SonPatternMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public SonPatternMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.11
	public CreateFamilyAccess getRule_CreateFamily() {
		return new CreateFamilyAccess();
	}
	
	public class CreateFamilyAccess extends NeoRuleCoAccess<CreateFamilyData, CreateFamilyCoData, CreateFamilyMask> {
		public final String _family = "family";
		
		public final String _param__namespace = "namespace";
		public final String _param__name = "name";
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(11);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilyData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyData(d));
		}
			
		@Override
		public Stream<CreateFamilyCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyCoData(d));
		}
		
		@Override
		public CreateFamilyMask mask() {
			return new CreateFamilyMask();
		}
	}
	
	public class CreateFamilyData extends NeoData {
		
		public CreateFamilyData(Record data) {
		}
		
		
	}
	
	public class CreateFamilyCoData extends NeoData {
		public final FamilyNode _family;
		
		public CreateFamilyCoData(Record data) {
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilyMask extends NeoMask {
		public CreateFamilyMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateFamilyMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateFamilyMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateFamilyMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.12
	public DeleteFamilyAccess getRule_DeleteFamily() {
		return new DeleteFamilyAccess();
	}
	
	public class DeleteFamilyAccess extends NeoRuleCoAccess<DeleteFamilyData, DeleteFamilyCoData, DeleteFamilyMask> {
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(12);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilyData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyData(d));
		}
			
		@Override
		public Stream<DeleteFamilyCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyCoData(d));
		}
		
		@Override
		public DeleteFamilyMask mask() {
			return new DeleteFamilyMask();
		}
	}
	
	public class DeleteFamilyData extends NeoData {
		public final FamilyNode _family;
		
		public DeleteFamilyData(Record data) {
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFamilyCoData extends NeoData {
		public final FamilyNode _family;
		
		public DeleteFamilyCoData(Record data) {
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFamilyMask extends NeoMask {
		public DeleteFamilyMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteFamilyMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteFamilyMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteFamilyMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.13
	public CreateFamilyMemberAccess getRule_CreateFamilyMember() {
		return new CreateFamilyMemberAccess();
	}
	
	public class CreateFamilyMemberAccess extends NeoRuleCoAccess<CreateFamilyMemberData, CreateFamilyMemberCoData, CreateFamilyMemberMask> {
		public final String _fm = "fm";
		
		public final String _param__id = "id";
		public final String _param__namespace = "namespace";
		public final String _param__name = "name";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(13);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilyMemberData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyMemberData(d));
		}
			
		@Override
		public Stream<CreateFamilyMemberCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyMemberCoData(d));
		}
		
		@Override
		public CreateFamilyMemberMask mask() {
			return new CreateFamilyMemberMask();
		}
	}
	
	public class CreateFamilyMemberData extends NeoData {
		
		public CreateFamilyMemberData(Record data) {
		}
		
		
	}
	
	public class CreateFamilyMemberCoData extends NeoData {
		public final FmNode _fm;
		
		public CreateFamilyMemberCoData(Record data) {
			var _fm = data.get("fm");
			this._fm = new FmNode(_fm);
		}
		
		
		public class FmNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FmNode(Value _fm) {
				if(!_fm.get("id").isNull())
					this._id = _fm.get("id").asInt();
				if(!_fm.get("name").isNull())
					this._name = _fm.get("name").asString();
				if(!_fm.get("ename").isNull())
					this._ename = _fm.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilyMemberMask extends NeoMask {
		public CreateFamilyMemberMask setFm(Long value) {
			nodeMask.put("fm", value);
			return this;
		}
		public CreateFamilyMemberMask setFmId(int value) {
			attributeMask.put("fm.id", value);
			return this;
		}
		public CreateFamilyMemberMask setFmName(String value) {
			attributeMask.put("fm.name", value);
			return this;
		}
		public CreateFamilyMemberMask setFmEname(String value) {
			attributeMask.put("fm.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.14
	public DeleteFamilyMemberAccess getRule_DeleteFamilyMember() {
		return new DeleteFamilyMemberAccess();
	}
	
	public class DeleteFamilyMemberAccess extends NeoRuleCoAccess<DeleteFamilyMemberData, DeleteFamilyMemberCoData, DeleteFamilyMemberMask> {
		public final String _fm = "fm";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(14);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilyMemberData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyMemberData(d));
		}
			
		@Override
		public Stream<DeleteFamilyMemberCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyMemberCoData(d));
		}
		
		@Override
		public DeleteFamilyMemberMask mask() {
			return new DeleteFamilyMemberMask();
		}
	}
	
	public class DeleteFamilyMemberData extends NeoData {
		public final FmNode _fm;
		
		public DeleteFamilyMemberData(Record data) {
			var _fm = data.get("fm");
			this._fm = new FmNode(_fm);
		}
		
		
		public class FmNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FmNode(Value _fm) {
				if(!_fm.get("id").isNull())
					this._id = _fm.get("id").asInt();
				if(!_fm.get("name").isNull())
					this._name = _fm.get("name").asString();
				if(!_fm.get("ename").isNull())
					this._ename = _fm.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFamilyMemberCoData extends NeoData {
		public final FmNode _fm;
		
		public DeleteFamilyMemberCoData(Record data) {
			var _fm = data.get("fm");
			this._fm = new FmNode(_fm);
		}
		
		
		public class FmNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FmNode(Value _fm) {
				if(!_fm.get("id").isNull())
					this._id = _fm.get("id").asInt();
				if(!_fm.get("name").isNull())
					this._name = _fm.get("name").asString();
				if(!_fm.get("ename").isNull())
					this._ename = _fm.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteFamilyMemberMask extends NeoMask {
		public DeleteFamilyMemberMask setFm(Long value) {
			nodeMask.put("fm", value);
			return this;
		}
		public DeleteFamilyMemberMask setFmId(int value) {
			attributeMask.put("fm.id", value);
			return this;
		}
		public DeleteFamilyMemberMask setFmName(String value) {
			attributeMask.put("fm.name", value);
			return this;
		}
		public DeleteFamilyMemberMask setFmEname(String value) {
			attributeMask.put("fm.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.15
	public SetFamilyMemberAsToBeCreatedAccess getRule_SetFamilyMemberAsToBeCreated() {
		return new SetFamilyMemberAsToBeCreatedAccess();
	}
	
	public class SetFamilyMemberAsToBeCreatedAccess extends NeoRuleCoAccess<SetFamilyMemberAsToBeCreatedData, SetFamilyMemberAsToBeCreatedCoData, SetFamilyMemberAsToBeCreatedMask> {
		public final String _fm = "fm";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(15);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<SetFamilyMemberAsToBeCreatedData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetFamilyMemberAsToBeCreatedData(d));
		}
			
		@Override
		public Stream<SetFamilyMemberAsToBeCreatedCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new SetFamilyMemberAsToBeCreatedCoData(d));
		}
		
		@Override
		public SetFamilyMemberAsToBeCreatedMask mask() {
			return new SetFamilyMemberAsToBeCreatedMask();
		}
	}
	
	public class SetFamilyMemberAsToBeCreatedData extends NeoData {
		public final FmNode _fm;
		
		public SetFamilyMemberAsToBeCreatedData(Record data) {
			var _fm = data.get("fm");
			this._fm = new FmNode(_fm);
		}
		
		
		public class FmNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FmNode(Value _fm) {
				if(!_fm.get("id").isNull())
					this._id = _fm.get("id").asInt();
				if(!_fm.get("name").isNull())
					this._name = _fm.get("name").asString();
				if(!_fm.get("ename").isNull())
					this._ename = _fm.get("ename").asString();
			}
		}
		
	}
	
	public class SetFamilyMemberAsToBeCreatedCoData extends NeoData {
		public final FmNode _fm;
		
		public SetFamilyMemberAsToBeCreatedCoData(Record data) {
			var _fm = data.get("fm");
			this._fm = new FmNode(_fm);
		}
		
		
		public class FmNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FmNode(Value _fm) {
				if(!_fm.get("id").isNull())
					this._id = _fm.get("id").asInt();
				if(!_fm.get("name").isNull())
					this._name = _fm.get("name").asString();
				if(!_fm.get("ename").isNull())
					this._ename = _fm.get("ename").asString();
			}
		}
		
	}
	
	public class SetFamilyMemberAsToBeCreatedMask extends NeoMask {
		public SetFamilyMemberAsToBeCreatedMask setFm(Long value) {
			nodeMask.put("fm", value);
			return this;
		}
		public SetFamilyMemberAsToBeCreatedMask setFmId(int value) {
			attributeMask.put("fm.id", value);
			return this;
		}
		public SetFamilyMemberAsToBeCreatedMask setFmName(String value) {
			attributeMask.put("fm.name", value);
			return this;
		}
		public SetFamilyMemberAsToBeCreatedMask setFmEname(String value) {
			attributeMask.put("fm.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.16
	public CreateRegisterFamilyEdgeAccess getRule_CreateRegisterFamilyEdge() {
		return new CreateRegisterFamilyEdgeAccess();
	}
	
	public class CreateRegisterFamilyEdgeAccess extends NeoRuleCoAccess<CreateRegisterFamilyEdgeData, CreateRegisterFamilyEdgeCoData, CreateRegisterFamilyEdgeMask> {
		public final String _register = "register";
		public final String _family = "family";
		
		public final String _param__id = "id";
		public final String _param__namespace = "namespace";
		public final String _param__name = "name";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(16);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateRegisterFamilyEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateRegisterFamilyEdgeData(d));
		}
			
		@Override
		public Stream<CreateRegisterFamilyEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateRegisterFamilyEdgeCoData(d));
		}
		
		@Override
		public CreateRegisterFamilyEdgeMask mask() {
			return new CreateRegisterFamilyEdgeMask();
		}
	}
	
	public class CreateRegisterFamilyEdgeData extends NeoData {
		public final RegisterNode _register;
		public final FamilyNode _family;
		
		public CreateRegisterFamilyEdgeData(Record data) {
			var _register = data.get("register");
			this._register = new RegisterNode(_register);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RegisterNode {
			public String _ename;
			
			public RegisterNode(Value _register) {
				if(!_register.get("ename").isNull())
					this._ename = _register.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateRegisterFamilyEdgeCoData extends NeoData {
		public final RegisterNode _register;
		public final Register_families_0_familyRel _register_families_0_family;
		public final FamilyNode _family;
		
		public CreateRegisterFamilyEdgeCoData(Record data) {
			var _register = data.get("register");
			this._register = new RegisterNode(_register);
			var _register_families_0_family = data.get("register_families_0_family");
			this._register_families_0_family = new Register_families_0_familyRel(_register_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RegisterNode {
			public String _ename;
			
			public RegisterNode(Value _register) {
				if(!_register.get("ename").isNull())
					this._ename = _register.get("ename").asString();
			}
		}
		
		public class Register_families_0_familyRel {
		
			public Register_families_0_familyRel(Value _register_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateRegisterFamilyEdgeMask extends NeoMask {
		public CreateRegisterFamilyEdgeMask setRegister(Long value) {
			nodeMask.put("register", value);
			return this;
		}
		public CreateRegisterFamilyEdgeMask setRegisterEname(String value) {
			attributeMask.put("register.ename", value);
			return this;
		}
		public CreateRegisterFamilyEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateRegisterFamilyEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateRegisterFamilyEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateRegisterFamilyEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.17
	public DeleteRegisterFamilyEdgeAccess getRule_DeleteRegisterFamilyEdge() {
		return new DeleteRegisterFamilyEdgeAccess();
	}
	
	public class DeleteRegisterFamilyEdgeAccess extends NeoRuleCoAccess<DeleteRegisterFamilyEdgeData, DeleteRegisterFamilyEdgeCoData, DeleteRegisterFamilyEdgeMask> {
		public final String _register = "register";
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(17);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteRegisterFamilyEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteRegisterFamilyEdgeData(d));
		}
			
		@Override
		public Stream<DeleteRegisterFamilyEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteRegisterFamilyEdgeCoData(d));
		}
		
		@Override
		public DeleteRegisterFamilyEdgeMask mask() {
			return new DeleteRegisterFamilyEdgeMask();
		}
	}
	
	public class DeleteRegisterFamilyEdgeData extends NeoData {
		public final RegisterNode _register;
		public final Register_families_0_familyRel _register_families_0_family;
		public final FamilyNode _family;
		
		public DeleteRegisterFamilyEdgeData(Record data) {
			var _register = data.get("register");
			this._register = new RegisterNode(_register);
			var _register_families_0_family = data.get("register_families_0_family");
			this._register_families_0_family = new Register_families_0_familyRel(_register_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RegisterNode {
			public String _ename;
			
			public RegisterNode(Value _register) {
				if(!_register.get("ename").isNull())
					this._ename = _register.get("ename").asString();
			}
		}
		
		public class Register_families_0_familyRel {
		
			public Register_families_0_familyRel(Value _register_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteRegisterFamilyEdgeCoData extends NeoData {
		public final RegisterNode _register;
		public final Register_families_0_familyRel _register_families_0_family;
		public final FamilyNode _family;
		
		public DeleteRegisterFamilyEdgeCoData(Record data) {
			var _register = data.get("register");
			this._register = new RegisterNode(_register);
			var _register_families_0_family = data.get("register_families_0_family");
			this._register_families_0_family = new Register_families_0_familyRel(_register_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RegisterNode {
			public String _ename;
			
			public RegisterNode(Value _register) {
				if(!_register.get("ename").isNull())
					this._ename = _register.get("ename").asString();
			}
		}
		
		public class Register_families_0_familyRel {
		
			public Register_families_0_familyRel(Value _register_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class DeleteRegisterFamilyEdgeMask extends NeoMask {
		public DeleteRegisterFamilyEdgeMask setRegister(Long value) {
			nodeMask.put("register", value);
			return this;
		}
		public DeleteRegisterFamilyEdgeMask setRegisterEname(String value) {
			attributeMask.put("register.ename", value);
			return this;
		}
		public DeleteRegisterFamilyEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteRegisterFamilyEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteRegisterFamilyEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteRegisterFamilyEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.18
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.19
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.20
	public CreateFamilySonEdgeAccess getRule_CreateFamilySonEdge() {
		return new CreateFamilySonEdgeAccess();
	}
	
	public class CreateFamilySonEdgeAccess extends NeoRuleCoAccess<CreateFamilySonEdgeData, CreateFamilySonEdgeCoData, CreateFamilySonEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__name = "name";
		public final String _param__namespace = "namespace";
		public final String _param__id = "id";
		public final String _param__fname = "fname";
		public final String _param__fid = "fid";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(20);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilySonEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilySonEdgeData(d));
		}
			
		@Override
		public Stream<CreateFamilySonEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilySonEdgeCoData(d));
		}
		
		@Override
		public CreateFamilySonEdgeMask mask() {
			return new CreateFamilySonEdgeMask();
		}
	}
	
	public class CreateFamilySonEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		
		public CreateFamilySonEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilySonEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_sons_0_memberRel _family_sons_0_member;
		
		public CreateFamilySonEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_sons_0_member = data.get("family_sons_0_member");
			this._family_sons_0_member = new Family_sons_0_memberRel(_family_sons_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_sons_0_memberRel {
		
			public Family_sons_0_memberRel(Value _family_sons_0_member) {
			}
		}
	}
	
	public class CreateFamilySonEdgeMask extends NeoMask {
		public CreateFamilySonEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public CreateFamilySonEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public CreateFamilySonEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public CreateFamilySonEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public CreateFamilySonEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateFamilySonEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateFamilySonEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateFamilySonEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.21
	public DeleteFamilySonEdgeAccess getRule_DeleteFamilySonEdge() {
		return new DeleteFamilySonEdgeAccess();
	}
	
	public class DeleteFamilySonEdgeAccess extends NeoRuleCoAccess<DeleteFamilySonEdgeData, DeleteFamilySonEdgeCoData, DeleteFamilySonEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(21);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilySonEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilySonEdgeData(d));
		}
			
		@Override
		public Stream<DeleteFamilySonEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilySonEdgeCoData(d));
		}
		
		@Override
		public DeleteFamilySonEdgeMask mask() {
			return new DeleteFamilySonEdgeMask();
		}
	}
	
	public class DeleteFamilySonEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_sons_0_memberRel _family_sons_0_member;
		
		public DeleteFamilySonEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_sons_0_member = data.get("family_sons_0_member");
			this._family_sons_0_member = new Family_sons_0_memberRel(_family_sons_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_sons_0_memberRel {
		
			public Family_sons_0_memberRel(Value _family_sons_0_member) {
			}
		}
	}
	
	public class DeleteFamilySonEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_sons_0_memberRel _family_sons_0_member;
		
		public DeleteFamilySonEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_sons_0_member = data.get("family_sons_0_member");
			this._family_sons_0_member = new Family_sons_0_memberRel(_family_sons_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_sons_0_memberRel {
		
			public Family_sons_0_memberRel(Value _family_sons_0_member) {
			}
		}
	}
	
	public class DeleteFamilySonEdgeMask extends NeoMask {
		public DeleteFamilySonEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteFamilySonEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.22
	public CreateFamilyDaughterEdgeAccess getRule_CreateFamilyDaughterEdge() {
		return new CreateFamilyDaughterEdgeAccess();
	}
	
	public class CreateFamilyDaughterEdgeAccess extends NeoRuleCoAccess<CreateFamilyDaughterEdgeData, CreateFamilyDaughterEdgeCoData, CreateFamilyDaughterEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__name = "name";
		public final String _param__namespace = "namespace";
		public final String _param__id = "id";
		public final String _param__fname = "fname";
		public final String _param__fid = "fid";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(22);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilyDaughterEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyDaughterEdgeData(d));
		}
			
		@Override
		public Stream<CreateFamilyDaughterEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyDaughterEdgeCoData(d));
		}
		
		@Override
		public CreateFamilyDaughterEdgeMask mask() {
			return new CreateFamilyDaughterEdgeMask();
		}
	}
	
	public class CreateFamilyDaughterEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		
		public CreateFamilyDaughterEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilyDaughterEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		
		public CreateFamilyDaughterEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
	}
	
	public class CreateFamilyDaughterEdgeMask extends NeoMask {
		public CreateFamilyDaughterEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateFamilyDaughterEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.23
	public DeleteFamilyDaughterEdgeAccess getRule_DeleteFamilyDaughterEdge() {
		return new DeleteFamilyDaughterEdgeAccess();
	}
	
	public class DeleteFamilyDaughterEdgeAccess extends NeoRuleCoAccess<DeleteFamilyDaughterEdgeData, DeleteFamilyDaughterEdgeCoData, DeleteFamilyDaughterEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(23);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilyDaughterEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyDaughterEdgeData(d));
		}
			
		@Override
		public Stream<DeleteFamilyDaughterEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyDaughterEdgeCoData(d));
		}
		
		@Override
		public DeleteFamilyDaughterEdgeMask mask() {
			return new DeleteFamilyDaughterEdgeMask();
		}
	}
	
	public class DeleteFamilyDaughterEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		
		public DeleteFamilyDaughterEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
	}
	
	public class DeleteFamilyDaughterEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		
		public DeleteFamilyDaughterEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
	}
	
	public class DeleteFamilyDaughterEdgeMask extends NeoMask {
		public DeleteFamilyDaughterEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteFamilyDaughterEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.24
	public CreateFamilyMotherEdgeAccess getRule_CreateFamilyMotherEdge() {
		return new CreateFamilyMotherEdgeAccess();
	}
	
	public class CreateFamilyMotherEdgeAccess extends NeoRuleCoAccess<CreateFamilyMotherEdgeData, CreateFamilyMotherEdgeCoData, CreateFamilyMotherEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__name = "name";
		public final String _param__namespace = "namespace";
		public final String _param__id = "id";
		public final String _param__fname = "fname";
		public final String _param__fid = "fid";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(24);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilyMotherEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyMotherEdgeData(d));
		}
			
		@Override
		public Stream<CreateFamilyMotherEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyMotherEdgeCoData(d));
		}
		
		@Override
		public CreateFamilyMotherEdgeMask mask() {
			return new CreateFamilyMotherEdgeMask();
		}
	}
	
	public class CreateFamilyMotherEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		
		public CreateFamilyMotherEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilyMotherEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_mother_0_memberRel _family_mother_0_member;
		
		public CreateFamilyMotherEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_mother_0_member = data.get("family_mother_0_member");
			this._family_mother_0_member = new Family_mother_0_memberRel(_family_mother_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_mother_0_memberRel {
		
			public Family_mother_0_memberRel(Value _family_mother_0_member) {
			}
		}
	}
	
	public class CreateFamilyMotherEdgeMask extends NeoMask {
		public CreateFamilyMotherEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateFamilyMotherEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.25
	public DeleteFamilyMotherEdgeAccess getRule_DeleteFamilyMotherEdge() {
		return new DeleteFamilyMotherEdgeAccess();
	}
	
	public class DeleteFamilyMotherEdgeAccess extends NeoRuleCoAccess<DeleteFamilyMotherEdgeData, DeleteFamilyMotherEdgeCoData, DeleteFamilyMotherEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(25);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilyMotherEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyMotherEdgeData(d));
		}
			
		@Override
		public Stream<DeleteFamilyMotherEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyMotherEdgeCoData(d));
		}
		
		@Override
		public DeleteFamilyMotherEdgeMask mask() {
			return new DeleteFamilyMotherEdgeMask();
		}
	}
	
	public class DeleteFamilyMotherEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_mother_0_memberRel _family_mother_0_member;
		
		public DeleteFamilyMotherEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_mother_0_member = data.get("family_mother_0_member");
			this._family_mother_0_member = new Family_mother_0_memberRel(_family_mother_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_mother_0_memberRel {
		
			public Family_mother_0_memberRel(Value _family_mother_0_member) {
			}
		}
	}
	
	public class DeleteFamilyMotherEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_mother_0_memberRel _family_mother_0_member;
		
		public DeleteFamilyMotherEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_mother_0_member = data.get("family_mother_0_member");
			this._family_mother_0_member = new Family_mother_0_memberRel(_family_mother_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_mother_0_memberRel {
		
			public Family_mother_0_memberRel(Value _family_mother_0_member) {
			}
		}
	}
	
	public class DeleteFamilyMotherEdgeMask extends NeoMask {
		public DeleteFamilyMotherEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteFamilyMotherEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.26
	public CreateFamilyFatherEdgeAccess getRule_CreateFamilyFatherEdge() {
		return new CreateFamilyFatherEdgeAccess();
	}
	
	public class CreateFamilyFatherEdgeAccess extends NeoRuleCoAccess<CreateFamilyFatherEdgeData, CreateFamilyFatherEdgeCoData, CreateFamilyFatherEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__name = "name";
		public final String _param__namespace = "namespace";
		public final String _param__id = "id";
		public final String _param__fname = "fname";
		public final String _param__fid = "fid";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(26);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<CreateFamilyFatherEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyFatherEdgeData(d));
		}
			
		@Override
		public Stream<CreateFamilyFatherEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new CreateFamilyFatherEdgeCoData(d));
		}
		
		@Override
		public CreateFamilyFatherEdgeMask mask() {
			return new CreateFamilyFatherEdgeMask();
		}
	}
	
	public class CreateFamilyFatherEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		
		public CreateFamilyFatherEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class CreateFamilyFatherEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_father_0_memberRel _family_father_0_member;
		
		public CreateFamilyFatherEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_father_0_member = data.get("family_father_0_member");
			this._family_father_0_member = new Family_father_0_memberRel(_family_father_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_father_0_memberRel {
		
			public Family_father_0_memberRel(Value _family_father_0_member) {
			}
		}
	}
	
	public class CreateFamilyFatherEdgeMask extends NeoMask {
		public CreateFamilyFatherEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public CreateFamilyFatherEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.27
	public DeleteFamilyFatherEdgeAccess getRule_DeleteFamilyFatherEdge() {
		return new DeleteFamilyFatherEdgeAccess();
	}
	
	public class DeleteFamilyFatherEdgeAccess extends NeoRuleCoAccess<DeleteFamilyFatherEdgeData, DeleteFamilyFatherEdgeCoData, DeleteFamilyFatherEdgeMask> {
		public final String _member = "member";
		public final String _family = "family";
		
		public final String _param__id = "id";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(27);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<DeleteFamilyFatherEdgeData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyFatherEdgeData(d));
		}
			
		@Override
		public Stream<DeleteFamilyFatherEdgeCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new DeleteFamilyFatherEdgeCoData(d));
		}
		
		@Override
		public DeleteFamilyFatherEdgeMask mask() {
			return new DeleteFamilyFatherEdgeMask();
		}
	}
	
	public class DeleteFamilyFatherEdgeData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_father_0_memberRel _family_father_0_member;
		
		public DeleteFamilyFatherEdgeData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_father_0_member = data.get("family_father_0_member");
			this._family_father_0_member = new Family_father_0_memberRel(_family_father_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_father_0_memberRel {
		
			public Family_father_0_memberRel(Value _family_father_0_member) {
			}
		}
	}
	
	public class DeleteFamilyFatherEdgeCoData extends NeoData {
		public final MemberNode _member;
		public final FamilyNode _family;
		public final Family_father_0_memberRel _family_father_0_member;
		
		public DeleteFamilyFatherEdgeCoData(Record data) {
			var _member = data.get("member");
			this._member = new MemberNode(_member);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_father_0_member = data.get("family_father_0_member");
			this._family_father_0_member = new Family_father_0_memberRel(_family_father_0_member);
		}
		
		
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_father_0_memberRel {
		
			public Family_father_0_memberRel(Value _family_father_0_member) {
			}
		}
	}
	
	public class DeleteFamilyFatherEdgeMask extends NeoMask {
		public DeleteFamilyFatherEdgeMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public DeleteFamilyFatherEdgeMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.28
	public ChangeNameOfFamilyAccess getRule_ChangeNameOfFamily() {
		return new ChangeNameOfFamilyAccess();
	}
	
	public class ChangeNameOfFamilyAccess extends NeoRuleCoAccess<ChangeNameOfFamilyData, ChangeNameOfFamilyCoData, ChangeNameOfFamilyMask> {
		public final String _r = "r";
		public final String _family = "family";
		
		public final String _param__id = "id";
		public final String _param__name = "name";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(28);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ChangeNameOfFamilyData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeNameOfFamilyData(d));
		}
			
		@Override
		public Stream<ChangeNameOfFamilyCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeNameOfFamilyCoData(d));
		}
		
		@Override
		public ChangeNameOfFamilyMask mask() {
			return new ChangeNameOfFamilyMask();
		}
	}
	
	public class ChangeNameOfFamilyData extends NeoData {
		public final RNode _r;
		public final R_families_0_familyRel _r_families_0_family;
		public final FamilyNode _family;
		
		public ChangeNameOfFamilyData(Record data) {
			var _r = data.get("r");
			this._r = new RNode(_r);
			var _r_families_0_family = data.get("r_families_0_family");
			this._r_families_0_family = new R_families_0_familyRel(_r_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RNode {
			public String _ename;
			
			public RNode(Value _r) {
				if(!_r.get("ename").isNull())
					this._ename = _r.get("ename").asString();
			}
		}
		
		public class R_families_0_familyRel {
		
			public R_families_0_familyRel(Value _r_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeNameOfFamilyCoData extends NeoData {
		public final RNode _r;
		public final R_families_0_familyRel _r_families_0_family;
		public final FamilyNode _family;
		
		public ChangeNameOfFamilyCoData(Record data) {
			var _r = data.get("r");
			this._r = new RNode(_r);
			var _r_families_0_family = data.get("r_families_0_family");
			this._r_families_0_family = new R_families_0_familyRel(_r_families_0_family);
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
		}
		
		
		public class RNode {
			public String _ename;
			
			public RNode(Value _r) {
				if(!_r.get("ename").isNull())
					this._ename = _r.get("ename").asString();
			}
		}
		
		public class R_families_0_familyRel {
		
			public R_families_0_familyRel(Value _r_families_0_family) {
			}
		}
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeNameOfFamilyMask extends NeoMask {
		public ChangeNameOfFamilyMask setR(Long value) {
			nodeMask.put("r", value);
			return this;
		}
		public ChangeNameOfFamilyMask setREname(String value) {
			attributeMask.put("r.ename", value);
			return this;
		}
		public ChangeNameOfFamilyMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public ChangeNameOfFamilyMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public ChangeNameOfFamilyMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public ChangeNameOfFamilyMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
	}
	
	//:~> platform:/resource/EneoFamiliesToPersons/src/org/benchmarx/eneo/f2p/Families.msl#//@entities.29
	public ChangeNameOfDaughterAccess getRule_ChangeNameOfDaughter() {
		return new ChangeNameOfDaughterAccess();
	}
	
	public class ChangeNameOfDaughterAccess extends NeoRuleCoAccess<ChangeNameOfDaughterData, ChangeNameOfDaughterCoData, ChangeNameOfDaughterMask> {
		public final String _family = "family";
		public final String _member = "member";
		
		public final String _param__id = "id";
		public final String _param__name = "name";
		
		@Override
		public NeoRule rule(){
			var r = (Rule) spec.getEntities().get(29);
			return NeoRuleFactory.createNeoRule(r, builder);
		}
		
		@Override
		public Stream<ChangeNameOfDaughterData> data(Collection<NeoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeNameOfDaughterData(d));
		}
			
		@Override
		public Stream<ChangeNameOfDaughterCoData> codata(Collection<NeoCoMatch> matches) {
			var data = NeoMatch.getData(matches);
			return data.stream().map(d -> new ChangeNameOfDaughterCoData(d));
		}
		
		@Override
		public ChangeNameOfDaughterMask mask() {
			return new ChangeNameOfDaughterMask();
		}
	}
	
	public class ChangeNameOfDaughterData extends NeoData {
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		public final MemberNode _member;
		
		public ChangeNameOfDaughterData(Record data) {
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
			var _member = data.get("member");
			this._member = new MemberNode(_member);
		}
		
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeNameOfDaughterCoData extends NeoData {
		public final FamilyNode _family;
		public final Family_daughters_0_memberRel _family_daughters_0_member;
		public final MemberNode _member;
		
		public ChangeNameOfDaughterCoData(Record data) {
			var _family = data.get("family");
			this._family = new FamilyNode(_family);
			var _family_daughters_0_member = data.get("family_daughters_0_member");
			this._family_daughters_0_member = new Family_daughters_0_memberRel(_family_daughters_0_member);
			var _member = data.get("member");
			this._member = new MemberNode(_member);
		}
		
		
		public class FamilyNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public FamilyNode(Value _family) {
				if(!_family.get("id").isNull())
					this._id = _family.get("id").asInt();
				if(!_family.get("name").isNull())
					this._name = _family.get("name").asString();
				if(!_family.get("ename").isNull())
					this._ename = _family.get("ename").asString();
			}
		}
		
		public class Family_daughters_0_memberRel {
		
			public Family_daughters_0_memberRel(Value _family_daughters_0_member) {
			}
		}
		public class MemberNode {
			public int _id;
			public String _name;
			public String _ename;
			
			public MemberNode(Value _member) {
				if(!_member.get("id").isNull())
					this._id = _member.get("id").asInt();
				if(!_member.get("name").isNull())
					this._name = _member.get("name").asString();
				if(!_member.get("ename").isNull())
					this._ename = _member.get("ename").asString();
			}
		}
		
	}
	
	public class ChangeNameOfDaughterMask extends NeoMask {
		public ChangeNameOfDaughterMask setFamily(Long value) {
			nodeMask.put("family", value);
			return this;
		}
		public ChangeNameOfDaughterMask setFamilyId(int value) {
			attributeMask.put("family.id", value);
			return this;
		}
		public ChangeNameOfDaughterMask setFamilyName(String value) {
			attributeMask.put("family.name", value);
			return this;
		}
		public ChangeNameOfDaughterMask setFamilyEname(String value) {
			attributeMask.put("family.ename", value);
			return this;
		}
		public ChangeNameOfDaughterMask setMember(Long value) {
			nodeMask.put("member", value);
			return this;
		}
		public ChangeNameOfDaughterMask setMemberId(int value) {
			attributeMask.put("member.id", value);
			return this;
		}
		public ChangeNameOfDaughterMask setMemberName(String value) {
			attributeMask.put("member.name", value);
			return this;
		}
		public ChangeNameOfDaughterMask setMemberEname(String value) {
			attributeMask.put("member.ename", value);
			return this;
		}
	}
}
