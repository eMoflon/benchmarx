//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.14
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace GeneratedCode.Miniyaml
{
    
    
    /// <summary>
    /// The public interface for MapEntry
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(MapEntry))]
    [XmlDefaultImplementationTypeAttribute(typeof(MapEntry))]
    [ModelRepresentationClassAttribute("http://york.ac.uk/ttc/miniyaml/1.0.0#//MapEntry")]
    public interface IMapEntry : IModelElement
    {
        
        /// <summary>
        /// The key property
        /// </summary>
        [DisplayNameAttribute("key")]
        [CategoryAttribute("MapEntry")]
        [XmlElementNameAttribute("key")]
        [XmlAttributeAttribute(true)]
        string Key
        {
            get;
            set;
        }
        
        /// <summary>
        /// The value property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("value")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IValue Value
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Key property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KeyChanging;
        
        /// <summary>
        /// Gets fired when the Key property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> KeyChanged;
        
        /// <summary>
        /// Gets fired before the Value property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ValueChanging;
        
        /// <summary>
        /// Gets fired when the Value property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ValueChanged;
    }
}

